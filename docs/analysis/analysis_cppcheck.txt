commands/ar.cpp:14:0: information: Include file: "signal.hpp" not found. [missingInclude]
#include "signal.hpp"
^
commands/ar.cpp:15:0: information: Include file: "stat.hpp" not found. [missingInclude]
#include "stat.hpp"
^
commands/ar.cpp:16:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
commands/ar.cpp:17:0: information: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring>
^
commands/ar.cpp:18:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
commands/ar.cpp:19:0: information: Include file: <string_view> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string_view>
^
commands/ar.cpp:149:13: error: syntax error: keyword 'catch' is not allowed in global scope [syntaxError]
static void catch (void) {
            ^
commands/basename.cpp:3:0: information: Include file: <filesystem> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <filesystem>
^
commands/basename.cpp:4:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
commands/basename.cpp:5:0: information: Include file: <string_view> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string_view>
^
commands/cal.cpp:103:32: error: No pair for character ('). Can't process file. File is either invalid or unicode, which is currently not supported. [syntaxError]
        << error, the above won't work >>
                               ^
commands/cat.cpp:9:0: information: Include file: "blocksiz.hpp" not found. [missingInclude]
#include "blocksiz.hpp"
^
commands/cat.cpp:10:0: information: Include file: "stat.hpp" not found. [missingInclude]
#include "stat.hpp"
^
commands/cat.cpp:11:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
commands/cat.cpp:12:0: information: Include file: <cerrno> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cerrno>
^
commands/cat.cpp:13:0: information: Include file: <string_view> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string_view>
^
commands/cat.cpp:29:22: style: The scope of the variable 'p' can be reduced. [variableScope]
    std::string_view p{}; // Potential '-u' flag
                     ^
commands/cat.cpp:75:9: style: The scope of the variable 'n' can be reduced. [variableScope]
    int n, j, m;
        ^
commands/cc.cpp:23:0: information: Include file: "signal.hpp" not found. [missingInclude]
#include "signal.hpp"
^
commands/cc.cpp:24:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
commands/cc.cpp:25:0: information: Include file: <errno.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <errno.h>
^
commands/cc.cpp:26:0: information: Include file: <string_view> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string_view>
^
commands/cc.cpp:398:9: style: Variable '*p1' is reassigned a value before the old one has been used. [redundantAssignment]
    *p1 = '.';
        ^
commands/cc.cpp:395:13: note: *p1 is assigned
        *p1 = '\0';
            ^
commands/cc.cpp:398:9: note: *p1 is overwritten
    *p1 = '.';
        ^
commands/cc.cpp:412:14: style: The scope of the variable 'fd' can be reduced. [variableScope]
    int pid, fd, status;
             ^
commands/cc.cpp:388:20: style: Variable 'p2' can be declared as pointer to const [constVariablePointer]
    register char *p2 = p1;
                   ^
commands/cc.cpp:421:21: style: Variable 'fd' is assigned a value that is never used. [unreadVariable]
            if ((fd = creat(outp, 0666)) != 1)
                    ^
commands/chmem.cpp:8:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
commands/chmem.cpp:33:11: style: Variable 'p' can be declared as pointer to const [constVariablePointer]
    char *p;
          ^
h/type.hpp:9:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>              // for std::size_t
^
h/type.hpp:10:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>              // for fixed-width integer types
^
h/type.hpp:11:0: information: Include file: <xinim/core_types.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <xinim/core_types.hpp> // New include for xinim types
^
commands/chown.cpp:15:0: information: Include file: "pwd.hpp" not found. [missingInclude]
#include "pwd.hpp"
^
commands/chown.cpp:16:0: information: Include file: "stat.hpp" not found. [missingInclude]
#include "stat.hpp"
^
commands/chown.cpp:17:0: information: Include file: "stdio.hpp" not found. [missingInclude]
#include "stdio.hpp"
^
commands/cmp.cpp:8:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
commands/cmp.cpp:68:22: style: The scope of the variable 'i' can be reduced. [variableScope]
    register unshort i;
                     ^
commands/comm.cpp:90:0: error: Found an exit path from function with non-void return type that has missing return statement [missingReturn]
        error("can't open ", fn);
^
commands/comm.cpp:39:9: style: The scope of the variable 'cnt' can be reduced. [variableScope]
    int cnt;
        ^
commands/comm.cpp:133:18: style: The scope of the variable 'res' can be reduced. [variableScope]
    register int res;
                 ^
commands/cp.cpp:9:0: information: Include file: "stat.hpp" not found. [missingInclude]
#include "stat.hpp"
^
commands/cp.cpp:10:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
commands/cp.cpp:62:12: style: The scope of the variable 'fd1' can be reduced. [variableScope]
    int i, fd1, fd2;
           ^
commands/date.cpp:9:0: information: Include file: "stdio.hpp" not found. [missingInclude]
#include "stdio.hpp"
^
commands/date.cpp:10:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
commands/date.cpp:11:0: information: Include file: <string_view> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string_view>
^
commands/date.cpp:44:13: warning: Return value of function freopen() is not used. [ignoredReturnValue]
            freopen(stdin, "/dev/tty0", "r");
            ^
commands/date.cpp:46:13: warning: Obsolete function 'gets' called. It is recommended to use 'fgets' or 'gets_s' instead. [getsCalled]
            gets(time_buf);
            ^
commands/date.cpp:44:13: error: Return value of allocation function 'freopen' is not stored. [leakReturnValNotUsed]
            freopen(stdin, "/dev/tty0", "r");
            ^
commands/dd.cpp:7:0: information: Include file: "signal.hpp" not found. [missingInclude]
#include "signal.hpp"
^
commands/dd.cpp:8:0: information: Include file: "stdio.hpp" not found. [missingInclude]
#include "stdio.hpp"
^
commands/dd.cpp:121:9: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
        fprintf(stderr, "%d truncated records\n", ntr);
        ^
commands/dd.cpp:282:36: style: Checking if unsigned expression '--files' is less than zero. [unsignedLessThanZero]
        if ((ibc == 0) && (--files <= 0)) {
                                   ^
commands/dd.cpp:110:12: style: Variable 'n' is assigned a value that is never used. [unreadVariable]
    if ((n = write(ofd, obuf, obc)) != obc) {
           ^
fs/const.hpp:4:0: information: Include file: "../../h/type.hpp" not found. [missingInclude]
#include "../../h/type.hpp" // For uid, gid, bit_nr, block_nr, inode_nr, zone_nr
^
fs/const.hpp:5:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>          // For std::size_t
^
fs/const.hpp:52:0: information: Include file: "../../h/const.hpp" not found. [missingInclude]
#include "../../h/const.hpp" // For BLOCK_SIZE
^
commands/df.cpp:14:0: information: Include file: "stat.hpp" not found. [missingInclude]
#include "stat.hpp"
^
commands/df.cpp:111:10: style: The scope of the variable 'wptr' can be reduced. [variableScope]
    int *wptr, *wlim;
         ^
commands/df.cpp:111:17: style: The scope of the variable 'wlim' can be reduced. [variableScope]
    int *wptr, *wlim;
                ^
commands/df.cpp:37:32: style: Variable 'sp' can be declared as pointer to const [constVariablePointer]
    struct super_block super, *sp;
                               ^
commands/df.cpp:111:10: style: Variable 'wptr' can be declared as pointer to const [constVariablePointer]
    int *wptr, *wlim;
         ^
commands/df.cpp:111:17: style: Variable 'wlim' can be declared as pointer to const [constVariablePointer]
    int *wptr, *wlim;
                ^
commands/df.cpp:130:24: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
                if ((w >> b) & 1)
                       ^
commands/df.cpp:129:27: note: Assuming that condition 'b<8*sizeof(int)' is not redundant
            for (b = 0; b < 8 * sizeof(int); b++) {
                          ^
commands/df.cpp:130:24: note: Shift
                if ((w >> b) & 1)
                       ^
commands/df.cpp:36:10: style: Unused variable: buf [unusedVariable]
    char buf[BLOCK_SIZE], *s0;
         ^
commands/dosread.cpp:20:0: information: Include file: "stat.hpp" not found. [missingInclude]
#include "stat.hpp"
^
commands/dosread.cpp:639:1: error: syntax error [syntaxError]
modes(mode) register unsigned char mode;
^
commands/echo.cpp:39:27: style: Parameter 's' can be declared as pointer to const [constParameterPointer]
static void collect(char *s) {
                          ^
commands/grep.cpp:28:0: information: Include file: "regexp.hpp" not found. [missingInclude]
#include "regexp.hpp"
^
commands/grep.cpp:29:0: information: Include file: "stdio.hpp" not found. [missingInclude]
#include "stdio.hpp"
^
commands/grep.cpp:155:13: portability: Returning an integer in a function with pointer return type is not portable. [CastIntegerToAddressAtReturn]
            return (buf - initbuf);
            ^
commands/grep.cpp:157:13: portability: Returning an integer in a function with pointer return type is not portable. [CastIntegerToAddressAtReturn]
            return (buf - initbuf);
            ^
commands/grep.cpp:87:21: error: Return value of allocation function 'fopen' is not stored. [leakReturnValNotUsed]
                if (fopen(*argp, "r") == NULL) {
                    ^
commands/grep.cpp:81:17: style: The scope of the variable 'infd' can be reduced. [variableScope]
            int infd;
                ^
commands/grep.cpp:147:26: style: The scope of the variable 'c' can be reduced. [variableScope]
    char *initbuf = buf, c;
                         ^
include/lib.hpp:16:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>         // for std::size_t, nullptr (though NIL_PTR is from h/const.hpp)
^
commands/gres.cpp:27:0: information: Include file: "regexp.hpp" not found. [missingInclude]
#include "regexp.hpp"
^
commands/gres.cpp:28:0: information: Include file: "stdio.hpp" not found. [missingInclude]
#include "stdio.hpp"
^
commands/gres.cpp:161:37: style: Parameter 'ibuf' can be declared as const array [constParameter]
static void dosub(regexp *exp, char ibuf[], char *repstr) {
                                    ^
commands/head.cpp:9:0: information: Include file: "stdio.hpp" not found. [missingInclude]
#include "stdio.hpp"
^
commands/head.cpp:10:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
commands/head.cpp:47:13: error: Return value of allocation function 'fopen' is not stored. [leakReturnValNotUsed]
        if (fopen(argv[k], "r") == NULL)
            ^
include/shared/signal_constants.hpp:6:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef> // For nullptr
^
include/shared/signal_constants.hpp:12:18: error: syntax error: 2 = [syntaxError]
inline constexpr int SIGINT = 2;   /* interrupt (DEL) */
                 ^
commands/libpack.cpp:8:0: information: Include file: <string_view> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string_view>
^
commands/libpack.cpp:10:0: information: Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdlib>  // for exit
^
commands/libpack.cpp:11:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h> // for read, write
^
commands/libpack.cpp:264:1: error: syntax error [syntaxError]
hainit() {
^
commands/libupack.cpp:7:0: information: Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdlib> // for exit
^
commands/libupack.cpp:8:0: information: Include file: <string_view> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string_view>
^
commands/libupack.cpp:9:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h> // for read, write
^
commands/libupack.cpp:142:9: style: The scope of the variable 'n' can be reduced. [variableScope]
    int n;     // number of bytes read from stdin
        ^
commands/libupack.cpp:143:9: style: The scope of the variable 'count' can be reduced. [variableScope]
    int count; // count of bytes produced by unpack88
        ^
commands/libupack.cpp:160:9: style: The scope of the variable 'k' can be reduced. [variableScope]
    int k;             // Current input byte as an unsigned value
        ^
commands/libupack.cpp:161:11: style: Variable 'p' can be declared as pointer to const [constVariablePointer]
    char *p;           // Pointer for table lookups
          ^
commands/libupack.cpp:151:11: style: Variable 'n' is assigned a value that is never used. [unreadVariable]
        n = write(1, output, count);
          ^
commands/ln.cpp:9:0: information: Include file: "stat.hpp" not found. [missingInclude]
#include "stat.hpp"
^
commands/ln.cpp:10:0: information: Include file: <filesystem> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <filesystem>
^
commands/ln.cpp:11:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
commands/login.cpp:9:0: information: Include file: "pwd.hpp" not found. [missingInclude]
#include "pwd.hpp"    // password entry handling
^
commands/login.cpp:10:0: information: Include file: "sgtty.hpp" not found. [missingInclude]
#include "sgtty.hpp"  // terminal control
^
commands/login.cpp:11:0: information: Include file: "signal.hpp" not found. [missingInclude]
#include "signal.hpp" // signal handling
^
commands/login.cpp:12:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
commands/login.cpp:13:0: information: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring>
^
commands/login.cpp:14:0: information: Include file: <string_view> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string_view>
^
commands/login.cpp:24:9: style: The scope of the variable 'bad' can be reduced. [variableScope]
    int bad = 0;
        ^
commands/login.cpp:23:12: style: Variable 'n1' is assigned a value that is never used. [unreadVariable]
    int n1 = 0;
           ^
commands/login.cpp:24:13: style: Variable 'bad' is assigned a value that is never used. [unreadVariable]
    int bad = 0;
            ^
commands/lpr.cpp:9:0: information: Include file: "errno.hpp" not found. [missingInclude]
#include "errno.hpp"
^
commands/lpr.cpp:21:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i, fd;
        ^
commands/lpr.cpp:21:12: style: The scope of the variable 'fd' can be reduced. [variableScope]
    int i, fd;
           ^
commands/lpr.cpp:52:10: style: The scope of the variable 'c' can be reduced. [variableScope]
    char c;
         ^
commands/lpr.cpp:88:9: style: The scope of the variable 'n' can be reduced. [variableScope]
    int n, count = 0;
        ^
commands/ls.cpp:13:0: information: Include file: "stat.hpp" not found. [missingInclude]
#include "stat.hpp"
^
commands/ls.cpp:14:0: information: Include file: "stdio.hpp" not found. [missingInclude]
#include "stdio.hpp"
^
commands/ls.cpp:402:14: style: Variable 'fp->size' is reassigned a value before the old one has been used. [redundantAssignment]
    fp->size = (m == I_CHAR_SPECIAL || m == I_BLOCK_SPECIAL ? sbuf.st_rdev : sbuf.st_size);
             ^
commands/ls.cpp:401:14: note: fp->size is assigned
    fp->size = sbuf.st_size;
             ^
commands/ls.cpp:402:14: note: fp->size is overwritten
    fp->size = (m == I_CHAR_SPECIAL || m == I_BLOCK_SPECIAL ? sbuf.st_rdev : sbuf.st_size);
             ^
commands/ls.cpp:59:11: style: The scope of the variable 'pwfile' can be reduced. [variableScope]
    char *pwfile;
          ^
commands/ls.cpp:132:12: style: The scope of the variable 'm1' can be reduced. [variableScope]
    int r, m1, m2;
           ^
commands/ls.cpp:132:16: style: The scope of the variable 'm2' can be reduced. [variableScope]
    int r, m1, m2;
               ^
commands/ls.cpp:290:9: style: The scope of the variable 'blks' can be reduced. [variableScope]
    int blks, m, prot, s;
        ^
commands/ls.cpp:290:15: style: The scope of the variable 'm' can be reduced. [variableScope]
    int blks, m, prot, s;
              ^
commands/ls.cpp:290:18: style: The scope of the variable 'prot' can be reduced. [variableScope]
    int blks, m, prot, s;
                 ^
commands/ls.cpp:290:24: style: The scope of the variable 's' can be reduced. [variableScope]
    int blks, m, prot, s;
                       ^
commands/ls.cpp:291:11: style: The scope of the variable 'p1' can be reduced. [variableScope]
    char *p1, *p2, *p3, c;
          ^
commands/ls.cpp:291:16: style: The scope of the variable 'p2' can be reduced. [variableScope]
    char *p1, *p2, *p3, c;
               ^
commands/ls.cpp:291:21: style: The scope of the variable 'p3' can be reduced. [variableScope]
    char *p1, *p2, *p3, c;
                    ^
commands/ls.cpp:291:25: style: The scope of the variable 'c' can be reduced. [variableScope]
    char *p1, *p2, *p3, c;
                        ^
commands/ls.cpp:415:11: style: The scope of the variable 'ptr' can be reduced. [variableScope]
    char *ptr;
          ^
commands/ls.cpp:457:10: style: The scope of the variable 'length' can be reduced. [variableScope]
    long length, time(), original;
         ^
commands/ls.cpp:538:22: style: The scope of the variable 'ptr' can be reduced. [variableScope]
    char lbuf[100], *ptr, *ptr1;
                     ^
commands/ls.cpp:539:9: style: The scope of the variable 'bin' can be reduced. [variableScope]
    int bin;
        ^
commands/ls.cpp:291:11: style: Variable 'p1' can be declared as pointer to const [constVariablePointer]
    char *p1, *p2, *p3, c;
          ^
commands/ls.cpp:291:16: style: Variable 'p2' can be declared as pointer to const [constVariablePointer]
    char *p1, *p2, *p3, c;
               ^
commands/ls.cpp:291:21: style: Variable 'p3' can be declared as pointer to const [constVariablePointer]
    char *p1, *p2, *p3, c;
                    ^
commands/ls.cpp:346:33: style: Parameter 'fp' can be declared as pointer to const [constParameterPointer]
static void owngrp(struct file *fp) {
                                ^
commands/ls.cpp:347:11: style: Variable 'buf' can be declared as pointer to const [constVariablePointer]
    char *buf;
          ^
commands/ls.cpp:365:42: style: Variable 'q' can be declared as pointer to const [constVariablePointer]
    char namebuf[MAXPATHLEN], *p, *org, *q;
                                         ^
commands/ls.cpp:365:36: style: Variable 'org' can be declared as pointer to const [constVariablePointer]
    char namebuf[MAXPATHLEN], *p, *org, *q;
                                   ^
commands/ls.cpp:538:28: style: Variable 'ptr1' can be declared as pointer to const [constVariablePointer]
    char lbuf[100], *ptr, *ptr1;
                           ^
commands/ls.cpp:376:9: style: Variable 'org' is assigned a value that is never used. [unreadVariable]
    org = fp->name;
        ^
commands/make.cpp:8:0: information: Include file: "errno.hpp" not found. [missingInclude]
#include "errno.hpp"
^
commands/make.cpp:9:0: information: Include file: "stdio.hpp" not found. [missingInclude]
#include "stdio.hpp"
^
commands/make.cpp:10:0: information: Include file: <cctype> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cctype>
^
commands/make.cpp:11:0: information: Include file: <string_view> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string_view>
^
commands/make.cpp:922:1: error: syntax error [syntaxError]
error(s1) char *s1;
^
commands/mined1.cpp:415:0: information: Include file: "sgtty.hpp" not found. [missingInclude]
#include "sgtty.hpp"
^
commands/mined1.cpp:416:0: information: Include file: "signal.hpp" not found. [missingInclude]
#include "signal.hpp"
^
commands/mined1.cpp:420:0: information: Include file: "errno.hpp" not found. [missingInclude]
#include "errno.hpp"
^
commands/mined1.cpp:1024:1: error: syntax error: keyword 'catch' is not allowed in global scope [syntaxError]
catch () {
^
commands/mined2.cpp:207:1: error: syntax error [syntaxError]
forward_scroll() {
^
commands/mined.hpp:13:0: information: Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdio>
^
commands/mkdir.cpp:9:0: information: Include file: "signal.hpp" not found. [missingInclude]
#include "signal.hpp"
^
commands/mkfs.cpp:21:0: information: Include file: "../fs/const.h" not found. [missingInclude]
#include "../fs/const.h"
^
commands/mkfs.cpp:26:0: information: Include file: "../fs/super.h" not found. [missingInclude]
#include "../fs/super.h"
^
commands/mkfs.cpp:27:0: information: Include file: "../fs/type.h" not found. [missingInclude]
#include "../fs/type.h"
^
commands/mkfs.cpp:42:0: information: Include file: "stat.hpp" not found. [missingInclude]
#include "stat.hpp"
^
commands/mkfs.cpp:43:0: information: Include file: "stdio.hpp" not found. [missingInclude]
#include "stdio.hpp"
^
commands/mkfs.cpp:225:1: error: syntax error [syntaxError]
super(zones, inodes) int zones, inodes;
^
commands/mount.cpp:9:0: information: Include file: "errno.hpp" not found. [missingInclude]
#include "errno.hpp"
^
commands/mv.cpp:9:0: information: Include file: "signal.hpp" not found. [missingInclude]
#include "signal.hpp"
^
commands/mv.cpp:10:0: information: Include file: "stat.hpp" not found. [missingInclude]
#include "stat.hpp"
^
commands/mv.cpp:17:11: style: The scope of the variable 'destdir' can be reduced. [variableScope]
    char *destdir;
          ^
commands/mv.cpp:74:29: style: Variable 'p' can be declared as pointer to const [constVariablePointer]
            char name[64], *p, *rindex();
                            ^
commands/od.cpp:9:0: information: Include file: "stdio.hpp" not found. [missingInclude]
#include "stdio.hpp"
^
commands/od.cpp:142:1: error: syntax error [syntaxError]
dumpfile() {
^
commands/passwd.cpp:9:0: information: Include file: "pwd.hpp" not found. [missingInclude]
#include "pwd.hpp"
^
commands/passwd.cpp:10:0: information: Include file: "signal.hpp" not found. [missingInclude]
#include "signal.hpp"
^
commands/passwd.cpp:19:18: style: The scope of the variable 'n' can be reduced. [variableScope]
    int uid, cn, n;
                 ^
commands/passwd.cpp:18:26: style: Parameter 'argv' can be declared as const array [constParameter]
int main(int argc, char *argv[]) {
                         ^
commands/pr.cpp:22:0: information: Include file: "stdio.hpp" not found. [missingInclude]
#include "stdio.hpp"
^
commands/pr.cpp:23:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
commands/pr.cpp:119:23: style: C-style pointer casting [cstyleCast]
        if ((colbuf = (char *)sbrk(cwidth * columns * length)) < 0) {
                      ^
commands/pr.cpp:62:11: style: The scope of the variable 'ptr' can be reduced. [variableScope]
    char *ptr;
          ^
commands/pr.cpp:354:10: style: The scope of the variable 'length' can be reduced. [variableScope]
    long length, time(), original;
         ^
commands/pr.cpp:119:64: style: A pointer can not be negative so it is either pointless or an error to check if it is. [pointerLessThanZero]
        if ((colbuf = (char *)sbrk(cwidth * columns * length)) < 0) {
                                                               ^
commands/pr.cpp:354:10: style: Local variable 'length' shadows outer variable [shadowVariable]
    long length, time(), original;
         ^
commands/pr.cpp:45:7: note: Shadowed declaration
short length = kDefaultLength;
      ^
commands/pr.cpp:354:10: note: Shadow variable
    long length, time(), original;
         ^
commands/pr.cpp:235:29: style: Parameter 'buf' can be declared as const array [constParameter]
static void print_page(char buf[], int pagenr, int maxcol) {
                            ^
commands/pr.cpp:357:14: style: Variable 'original' is assigned a value that is never used. [unreadVariable]
    original = t;
             ^
commands/pwd.cpp:9:0: information: Include file: "stat.hpp" not found. [missingInclude]
#include "stat.hpp"
^
commands/pwd.cpp:46:30: style: C-style pointer casting [cstyleCast]
                if (read(fd, (char *)&d, sizeof(struct direct)) < sizeof(struct direct)) {
                             ^
commands/pwd.cpp:53:30: style: C-style pointer casting [cstyleCast]
                if (read(fd, (char *)&d, sizeof(struct direct)) < sizeof(struct direct)) {
                             ^
commands/pwd.cpp:18:18: style: The scope of the variable 'fd' can be reduced. [variableScope]
    register int fd;
                 ^
commands/pwd.cpp:19:31: style: The scope of the variable 'n' can be reduced. [variableScope]
    register char name[128], *n;
                              ^
commands/pwd.cpp:81:21: warning: inconclusive: Found suspicious operator '*', result is not used. [constStatement]
    for (; *string; *string++)
                    ^
commands/rev.cpp:9:0: information: Include file: "blocksiz.hpp" not found. [missingInclude]
#include "blocksiz.hpp"
^
commands/rm.cpp:5:0: information: Include file: "stat.hpp" not found. [missingInclude]
#include "stat.hpp"
^
commands/rm.cpp:89:29: style: C-style pointer casting [cstyleCast]
            while (read(fd, (char *)&d, sizeof(struct direct)) > 0) {
                            ^
commands/rm.cpp:20:11: style: The scope of the variable 'opt' can be reduced. [variableScope]
    char *opt;
          ^
commands/rm.cpp:67:10: style: The scope of the variable 'rname' can be reduced. [variableScope]
    char rname[128], *strcpy(), *strcat();
         ^
commands/rm.cpp:68:9: style: The scope of the variable 'fd' can be reduced. [variableScope]
    int fd;
        ^
commands/rm.cpp:24:5: warning: inconclusive: Found suspicious operator '*', result is not used. [constStatement]
    *++argv;
    ^
commands/rm.cpp:45:9: warning: inconclusive: Found suspicious operator '*', result is not used. [constStatement]
        *++argv;
        ^
include/shared/stat_struct.hpp:6:0: information: Include file: <xinim/core_types.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <xinim/core_types.hpp> // For xinim::dev_t, xinim::ino_t etc.
^
include/stat.hpp:12:0: information: Include file: <xinim/core_types.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <xinim/core_types.hpp>   // Ensure xinim::mode_t is directly available
^
commands/roff.cpp:9:0: information: Include file: "sgtty.hpp" not found. [missingInclude]
#include "sgtty.hpp"
^
commands/roff.cpp:10:0: information: Include file: "signal.hpp" not found. [missingInclude]
#include "signal.hpp"
^
commands/roff.cpp:11:0: information: Include file: "stat.hpp" not found. [missingInclude]
#include "stat.hpp"
^
commands/roff.cpp:12:0: information: Include file: "stdio.hpp" not found. [missingInclude]
#include "stdio.hpp"
^
commands/roff.cpp:130:1: error: syntax error [syntaxError]
mesg(f) int f;
^
commands/sh1.cpp:7:0: information: Include file: "errno.hpp" not found. [missingInclude]
#include "errno.hpp"
^
commands/sh1.cpp:8:0: information: Include file: "setjmp.hpp" not found. [missingInclude]
#include "setjmp.hpp"
^
commands/sh1.cpp:9:0: information: Include file: "sh.hpp" not found. [missingInclude]
#include "sh.hpp"
^
commands/sh1.cpp:10:0: information: Include file: "signal.hpp" not found. [missingInclude]
#include "signal.hpp"
^
commands/sh1.cpp:712:27: error: syntax error [syntaxError]
    register int c, d, not, found;
                          ^
commands/sh2.cpp:7:0: information: Include file: "errno.hpp" not found. [missingInclude]
#include "errno.hpp"
^
commands/sh2.cpp:8:0: information: Include file: "setjmp.hpp" not found. [missingInclude]
#include "setjmp.hpp"
^
commands/sh2.cpp:9:0: information: Include file: "sh.hpp" not found. [missingInclude]
#include "sh.hpp"
^
commands/sh2.cpp:10:0: information: Include file: "signal.hpp" not found. [missingInclude]
#include "signal.hpp"
^
commands/sh2.cpp:437:1: error: syntax error [syntaxError]
rlookup(n) register char *n;
^
commands/sh3.cpp:7:0: information: Include file: "errno.hpp" not found. [missingInclude]
#include "errno.hpp"
^
commands/sh3.cpp:8:0: information: Include file: "setjmp.hpp" not found. [missingInclude]
#include "setjmp.hpp"
^
commands/sh3.cpp:9:0: information: Include file: "sh.hpp" not found. [missingInclude]
#include "sh.hpp"
^
commands/sh3.cpp:10:0: information: Include file: "signal.hpp" not found. [missingInclude]
#include "signal.hpp"
^
commands/sh3.cpp:309:1: error: syntax error [syntaxError]
iosetup(iop, pipein, pipeout) register struct ioword *iop;
^
commands/sh4.cpp:7:0: information: Include file: "errno.hpp" not found. [missingInclude]
#include "errno.hpp"
^
commands/sh4.cpp:8:0: information: Include file: "setjmp.hpp" not found. [missingInclude]
#include "setjmp.hpp"
^
commands/sh4.cpp:9:0: information: Include file: "sh.hpp" not found. [missingInclude]
#include "sh.hpp"
^
commands/sh4.cpp:10:0: information: Include file: "signal.hpp" not found. [missingInclude]
#include "signal.hpp"
^
commands/sh4.cpp:11:0: information: Include file: "stat.hpp" not found. [missingInclude]
#include "stat.hpp"
^
commands/sh4.cpp:432:1: error: syntax error [syntaxError]
globname(we, pp) char *we;
^
commands/sh5.cpp:7:0: information: Include file: "errno.hpp" not found. [missingInclude]
#include "errno.hpp"
^
commands/sh5.cpp:8:0: information: Include file: "setjmp.hpp" not found. [missingInclude]
#include "setjmp.hpp"
^
commands/sh5.cpp:9:0: information: Include file: "sh.hpp" not found. [missingInclude]
#include "sh.hpp"
^
commands/sh5.cpp:10:0: information: Include file: "signal.hpp" not found. [missingInclude]
#include "signal.hpp"
^
commands/sh5.cpp:395:1: error: syntax error [syntaxError]
markhere(s, iop) register char *s;
^
commands/shar.cpp:9:0: information: Include file: "blocksiz.hpp" not found. [missingInclude]
#include "blocksiz.hpp"
^
commands/shar.cpp:20:9: style: The scope of the variable 'fd' can be reduced. [variableScope]
    int fd;
        ^
commands/shar.cpp:63:25: style: Parameter 'str' can be declared as pointer to const [constParameterPointer]
static void print(char *str) {
                        ^
commands/shar.cpp:43:20: style: Variable 'r' is assigned a value that is never used. [unreadVariable]
    register int r = 0;
                   ^
commands/sleep.cpp:10:26: style: Parameter 'argv' can be declared as const array [constParameter]
int main(int argc, char *argv[]) {
                         ^
commands/sort.cpp:40:0: information: Include file: "signal.hpp" not found. [missingInclude]
#include "signal.hpp"
^
commands/sort.cpp:41:0: information: Include file: "stat.hpp" not found. [missingInclude]
#include "stat.hpp"
^
commands/sort.cpp:280:1: error: syntax error: keyword 'catch' is not allowed in global scope [syntaxError]
catch () {
^
commands/split.cpp:9:0: information: Include file: "blocksiz.hpp" not found. [missingInclude]
#include "blocksiz.hpp"
^
commands/split.cpp:55:28: style: The scope of the variable 'base' can be reduced. [variableScope]
    register char *index, *base;
                           ^
commands/stty.cpp:9:0: information: Include file: "sgtty.hpp" not found. [missingInclude]
#include "sgtty.hpp"
^
commands/stty.cpp:72:37: style: Parameter 'next' can be declared as pointer to const [constParameterPointer]
static void option(char *opt, char *next) {
                                    ^
commands/su.cpp:9:0: information: Include file: "pwd.hpp" not found. [missingInclude]
#include "pwd.hpp"
^
commands/su.cpp:10:0: information: Include file: "sgtty.hpp" not found. [missingInclude]
#include "sgtty.hpp"
^
commands/su.cpp:11:0: information: Include file: "stdio.hpp" not found. [missingInclude]
#include "stdio.hpp"
^
commands/su.cpp:18:9: style: The scope of the variable 'nr' can be reduced. [variableScope]
    int nr;
        ^
commands/su.cpp:19:10: style: The scope of the variable 'password' can be reduced. [variableScope]
    char password[14];
         ^
commands/sum.cpp:20:0: information: Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdlib>  // exit
^
commands/sum.cpp:21:0: information: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring>  // strcmp
^
commands/sum.cpp:22:0: information: Include file: <fcntl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <fcntl.h>  // open
^
commands/sum.cpp:23:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h> // read, close
^
include/xinim/core_types.hpp:4:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint> // For fixed-width integer types
^
include/xinim/core_types.hpp:5:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef> // For std::size_t, std::ptrdiff_t
^
commands/svcctl.hpp:8:0: information: Include file: <span> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <span>
^
kernel/net_driver.hpp:20:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>
^
kernel/net_driver.hpp:21:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
kernel/net_driver.hpp:22:0: information: Include file: <filesystem> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <filesystem>
^
kernel/net_driver.hpp:23:0: information: Include file: <functional> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <functional>
^
kernel/net_driver.hpp:24:0: information: Include file: <netinet/in.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <netinet/in.h>
^
kernel/net_driver.hpp:25:0: information: Include file: <span> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <span>
^
kernel/net_driver.hpp:26:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
kernel/net_driver.hpp:27:0: information: Include file: <system_error> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <system_error>
^
kernel/net_driver.hpp:28:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
kernel/net_driver.hpp:29:0: information: Include file: <system_error> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <system_error> // for std::errc
^
crypto/kyber_impl/api.h:4:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
kernel/pqcrypto.hpp:7:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
kernel/pqcrypto.hpp:8:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
kernel/type.hpp:11:0: information: Include file: <xinim/core_types.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <xinim/core_types.hpp> // For xinim::virt_addr_t and std::uint64_t
^
kernel/const.hpp:6:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>              // For std::size_t
^
kernel/const.hpp:7:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>              // For uint64_t
^
kernel/const.hpp:8:0: information: Include file: <xinim/core_types.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <xinim/core_types.hpp> // For std::uint64_t, std::size_t, etc.
^
kernel/lattice_ipc.hpp:11:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
kernel/lattice_ipc.hpp:12:0: information: Include file: <deque> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <deque>
^
kernel/lattice_ipc.hpp:13:0: information: Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <map>
^
kernel/lattice_ipc.hpp:14:0: information: Include file: <unordered_map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unordered_map>
^
kernel/lattice_ipc.hpp:15:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
commands/svcctl.cpp:3:0: information: Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdio>
^
commands/svcctl.cpp:4:0: information: Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdlib>
^
commands/svcctl.cpp:5:0: information: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring>
^
commands/svcctl.cpp:6:0: information: Include file: <string_view> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string_view>
^
kernel/net_driver.hpp:2:617: error: Unmatched '}'. Configuration: '__GNUC__;__clang__'. [syntaxError]
/**

commands/sync.cpp:9:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
commands/tail.cpp:9:0: information: Include file: "stdio.hpp" not found. [missingInclude]
#include "stdio.hpp"
^
commands/tail.cpp:112:11: style: The scope of the variable 'start' can be reduced. [variableScope]
    char *start, *finish, *end;
          ^
commands/tail.cpp:112:19: style: The scope of the variable 'finish' can be reduced. [variableScope]
    char *start, *finish, *end;
                  ^
commands/tail.cpp:112:28: style: The scope of the variable 'end' can be reduced. [variableScope]
    char *start, *finish, *end;
                           ^
commands/tail.cpp:112:28: style: Variable 'end' can be declared as pointer to const [constVariablePointer]
    char *start, *finish, *end;
                           ^
commands/tar.cpp:19:0: information: Include file: "stat.hpp" not found. [missingInclude]
#include "stat.hpp"
^
commands/tar.cpp:76:1: error: syntax error [syntaxError]
error(s1, s2) char *s1, *s2;
^
commands/tee.cpp:5:0: information: Include file: "blocksiz.hpp" not found. [missingInclude]
#include "blocksiz.hpp"
^
commands/tee.cpp:6:0: information: Include file: "signal.hpp" not found. [missingInclude]
#include "signal.hpp"
^
commands/time.cpp:10:0: information: Include file: "signal.hpp" not found. [missingInclude]
#include "signal.hpp"
^
commands/time.cpp:135:20: style: Variable 'p1' can be declared as pointer to const [constVariablePointer]
    register char *p1, *p2;
                   ^
commands/time.cpp:16:10: style: struct member 'time_buf::user' is never used. [unusedStructMember]
    long user, sys;
         ^
commands/time.cpp:16:16: style: struct member 'time_buf::sys' is never used. [unusedStructMember]
    long user, sys;
               ^
commands/touch.cpp:3:0: information: Include file: "errno.hpp" not found. [missingInclude]
#include "errno.hpp"
^
commands/touch.cpp:4:0: information: Include file: "stat.hpp" not found. [missingInclude]
#include "stat.hpp"
^
commands/touch.cpp:38:14: style: The scope of the variable 'tim' can be reduced. [variableScope]
    long *t, tim;
             ^
commands/touch.cpp:40:20: style: The scope of the variable 'tmp' can be reduced. [variableScope]
    unsigned short tmp;
                   ^
commands/touch.cpp:41:10: style: The scope of the variable 'tvp' can be reduced. [variableScope]
    long tvp[2];
         ^
commands/touch.cpp:8:11: style: Variable 'path' can be declared as pointer to const [constVariablePointer]
    char *path;
          ^
commands/touch.cpp:38:11: style: Unused variable: t [unusedVariable]
    long *t, tim;
          ^
commands/tr.cpp:83:11: style: The scope of the variable 'c' can be reduced. [variableScope]
    short c, coded;
          ^
commands/tr.cpp:83:14: style: The scope of the variable 'coded' can be reduced. [variableScope]
    short c, coded;
             ^
commands/tr.cpp:115:56: style: Parameter 'string2' can be declared as pointer to const [constParameterPointer]
static void map(unsigned char *string1, unsigned char *string2) {
                                                       ^
commands/umount.cpp:9:0: information: Include file: "errno.hpp" not found. [missingInclude]
#include "errno.hpp"
^
commands/uniq.cpp:21:0: information: Include file: "stdio.hpp" not found. [missingInclude]
#include "stdio.hpp"
^
commands/uniq.cpp:22:0: information: Include file: <cctype> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cctype>
^
commands/uniq.cpp:173:1: error: Unmatched '}'. Configuration: ''. [syntaxError]
}
^
commands/update.cpp:5:0: information: Include file: "signal.hpp" not found. [missingInclude]
#include "signal.hpp"
^
commands/update.cpp:9:9: style: Unused variable: fd [unusedVariable]
    int fd, buf[2];
        ^
commands/update.cpp:9:13: style: Unused variable: buf [unusedVariable]
    int fd, buf[2];
            ^
commands/wc.cpp:9:0: information: Include file: "stdio.hpp" not found. [missingInclude]
#include "stdio.hpp"
^
commands/wc.cpp:10:0: information: Include file: <cctype> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cctype>
^
commands/wc.cpp:105:13: error: Return value of allocation function 'fopen' is not stored. [leakReturnValNotUsed]
        if (fopen(argv[k], "r") == NULL) {
            ^
commands/wc.cpp:51:9: style: Unused variable: i [unusedVariable]
    int i;
        ^
commands/x.cpp:10:12: style: The scope of the variable 'n' can be reduced. [variableScope]
    int i, n;
           ^
common/math/quaternion.hpp:4:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
common/math/quaternion.hpp:5:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath> // For std::sqrt
^
common/math/quaternion.hpp:6:0: information: Include file: <iosfwd> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iosfwd> // For ostream declaration
^
common/math/octonion.hpp:5:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
common/math/octonion.hpp:6:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>    // For std::sqrt
^
common/math/octonion.hpp:7:0: information: Include file: <iosfwd> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iosfwd>   // For ostream declaration
^
common/math/octonion.cpp:3:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>        // For std::sqrt, std::fabs
^
common/math/octonion.cpp:4:0: information: Include file: <stdexcept> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdexcept>    // For std::runtime_error
^
common/math/octonion.cpp:5:0: information: Include file: <ostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ostream>
^
common/math/octonion.cpp:6:0: information: Include file: <iomanip> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iomanip>      // For std::fixed, std::setprecision
^
common/math/octonion.cpp:7:0: information: Include file: <numeric> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <numeric>      // For std::inner_product (potentially, or manual loop for norm_sq)
^
common/math/octonion.cpp:13:38: style: inconclusive: Function 'Octonion' argument 1 names different: declaration 'a' definition 'q1'. [funcArgNamesDifferent]
Octonion::Octonion(const Quaternion& q1, const Quaternion& q2) {
                                     ^
common/math/octonion.hpp:41:32: note: Function 'Octonion' argument 1 names different: declaration 'a' definition 'q1'.
    Octonion(const Quaternion& a, const Quaternion& b);
                               ^
common/math/octonion.cpp:13:38: note: Function 'Octonion' argument 1 names different: declaration 'a' definition 'q1'.
Octonion::Octonion(const Quaternion& q1, const Quaternion& q2) {
                                     ^
common/math/octonion.cpp:13:60: style: inconclusive: Function 'Octonion' argument 2 names different: declaration 'b' definition 'q2'. [funcArgNamesDifferent]
Octonion::Octonion(const Quaternion& q1, const Quaternion& q2) {
                                                           ^
common/math/octonion.hpp:41:53: note: Function 'Octonion' argument 2 names different: declaration 'b' definition 'q2'.
    Octonion(const Quaternion& a, const Quaternion& b);
                                                    ^
common/math/octonion.cpp:13:60: note: Function 'Octonion' argument 2 names different: declaration 'b' definition 'q2'.
Octonion::Octonion(const Quaternion& q1, const Quaternion& q2) {
                                                           ^
common/math/octonion.hpp:73:20: style: Consider using std::accumulate algorithm instead of a raw loop. [useStlAlgorithm]
            sum_sq += val * val;
                   ^
common/math/quaternion.cpp:2:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath> // For std::sqrt, std::fabs
^
common/math/quaternion.cpp:3:0: information: Include file: <stdexcept> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdexcept> // For std::runtime_error (in division by zero scalar)
^
common/math/quaternion.cpp:4:0: information: Include file: <ostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ostream>
^
common/math/quaternion.cpp:5:0: information: Include file: <iomanip> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iomanip> // For std::fixed, std::setprecision
^
common/math/sedenion.hpp:5:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
common/math/sedenion.hpp:6:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>    // For std::sqrt
^
common/math/sedenion.hpp:7:0: information: Include file: <iosfwd> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iosfwd>   // For ostream declaration
^
common/math/sedenion.cpp:3:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>      // For std::sqrt, std::fabs
^
common/math/sedenion.cpp:4:0: information: Include file: <stdexcept> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdexcept>  // For std::runtime_error
^
common/math/sedenion.cpp:5:0: information: Include file: <ostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ostream>
^
common/math/sedenion.cpp:6:0: information: Include file: <iomanip> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iomanip>    // For std::fixed, std::setprecision
^
common/math/sedenion.cpp:7:0: information: Include file: <numeric> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <numeric>    // For std::inner_product (or manual loop for norm_sq)
^
common/math/sedenion.cpp:13:36: style: inconclusive: Function 'Sedenion' argument 1 names different: declaration 'a' definition 'o1'. [funcArgNamesDifferent]
Sedenion::Sedenion(const Octonion& o1, const Octonion& o2) {
                                   ^
common/math/sedenion.hpp:50:30: note: Function 'Sedenion' argument 1 names different: declaration 'a' definition 'o1'.
    Sedenion(const Octonion& a, const Octonion& b);
                             ^
common/math/sedenion.cpp:13:36: note: Function 'Sedenion' argument 1 names different: declaration 'a' definition 'o1'.
Sedenion::Sedenion(const Octonion& o1, const Octonion& o2) {
                                   ^
common/math/sedenion.cpp:13:56: style: inconclusive: Function 'Sedenion' argument 2 names different: declaration 'b' definition 'o2'. [funcArgNamesDifferent]
Sedenion::Sedenion(const Octonion& o1, const Octonion& o2) {
                                                       ^
common/math/sedenion.hpp:50:49: note: Function 'Sedenion' argument 2 names different: declaration 'b' definition 'o2'.
    Sedenion(const Octonion& a, const Octonion& b);
                                                ^
common/math/sedenion.cpp:13:56: note: Function 'Sedenion' argument 2 names different: declaration 'b' definition 'o2'.
Sedenion::Sedenion(const Octonion& o1, const Octonion& o2) {
                                                       ^
common/math/sedenion.hpp:86:20: style: Consider using std::accumulate algorithm instead of a raw loop. [useStlAlgorithm]
            sum_sq += val * val;
                   ^
console.h:4:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h> // For uint8_t, etc.
^
console.cpp:2:0: information: Include file: <stddef.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stddef.h> // For size_t, NULL
^
console.cpp:68:28: style: inconclusive: Function 'console_clear' argument 1 names different: declaration 'background_color' definition 'background'. [funcArgNamesDifferent]
void console_clear(uint8_t background, uint8_t foreground) {
                           ^
console.h:28:28: note: Function 'console_clear' argument 1 names different: declaration 'background_color' definition 'background'.
void console_clear(uint8_t background_color = VGA_COLOR_BLACK, uint8_t foreground_color = VGA_COLOR_WHITE);
                           ^
console.cpp:68:28: note: Function 'console_clear' argument 1 names different: declaration 'background_color' definition 'background'.
void console_clear(uint8_t background, uint8_t foreground) {
                           ^
console.cpp:68:48: style: inconclusive: Function 'console_clear' argument 2 names different: declaration 'foreground_color' definition 'foreground'. [funcArgNamesDifferent]
void console_clear(uint8_t background, uint8_t foreground) {
                                               ^
console.h:28:72: note: Function 'console_clear' argument 2 names different: declaration 'foreground_color' definition 'foreground'.
void console_clear(uint8_t background_color = VGA_COLOR_BLACK, uint8_t foreground_color = VGA_COLOR_WHITE);
                                                                       ^
console.cpp:68:48: note: Function 'console_clear' argument 2 names different: declaration 'foreground_color' definition 'foreground'.
void console_clear(uint8_t background, uint8_t foreground) {
                                               ^
console.cpp:83:27: style: inconclusive: Function 'console_init' argument 1 names different: declaration 'background_color' definition 'background'. [funcArgNamesDifferent]
void console_init(uint8_t background, uint8_t foreground) {
                          ^
console.h:27:27: note: Function 'console_init' argument 1 names different: declaration 'background_color' definition 'background'.
void console_init(uint8_t background_color = VGA_COLOR_BLACK, uint8_t foreground_color = VGA_COLOR_WHITE);
                          ^
console.cpp:83:27: note: Function 'console_init' argument 1 names different: declaration 'background_color' definition 'background'.
void console_init(uint8_t background, uint8_t foreground) {
                          ^
console.cpp:83:47: style: inconclusive: Function 'console_init' argument 2 names different: declaration 'foreground_color' definition 'foreground'. [funcArgNamesDifferent]
void console_init(uint8_t background, uint8_t foreground) {
                                              ^
console.h:27:71: note: Function 'console_init' argument 2 names different: declaration 'foreground_color' definition 'foreground'.
void console_init(uint8_t background_color = VGA_COLOR_BLACK, uint8_t foreground_color = VGA_COLOR_WHITE);
                                                                      ^
console.cpp:83:47: note: Function 'console_init' argument 2 names different: declaration 'foreground_color' definition 'foreground'.
void console_init(uint8_t background, uint8_t foreground) {
                                              ^
crypto/kyber.hpp:8:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
crypto/kyber.hpp:9:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>
^
crypto/kyber.hpp:10:0: information: Include file: <span> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <span>
^
crypto/kyber.hpp:11:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
crypto/kyber.cpp:8:0: information: Include file: <openssl/evp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <openssl/evp.h>
^
crypto/kyber.cpp:9:0: information: Include file: <sodium.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sodium.h>
^
crypto/kyber.cpp:11:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
crypto/kyber.cpp:12:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
crypto/kyber.cpp:13:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
crypto/kyber.cpp:14:0: information: Include file: <random> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <random>
^
crypto/kyber.cpp:15:0: information: Include file: <stdexcept> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdexcept>
^
crypto/kyber_impl/cbd.c:1:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
crypto/kyber_impl/cbd.h:4:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
crypto/kyber_impl/poly.h:4:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
crypto/kyber_impl/cbd.c:61:12: style: The scope of the variable 't' can be reduced. [variableScope]
  uint32_t t,d;
           ^
crypto/kyber_impl/cbd.c:61:14: style: The scope of the variable 'd' can be reduced. [variableScope]
  uint32_t t,d;
             ^
crypto/kyber_impl/fips202.c:6:0: information: Include file: <stddef.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stddef.h>
^
crypto/kyber_impl/fips202.c:7:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
crypto/kyber_impl/fips202.h:4:0: information: Include file: <stddef.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stddef.h>
^
crypto/kyber_impl/fips202.h:5:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
crypto/kyber_impl/fips202.c:92:18: style: The scope of the variable 'Da' can be reduced. [variableScope]
        uint64_t Da, De, Di, Do, Du;
                 ^
crypto/kyber_impl/fips202.c:92:22: style: The scope of the variable 'De' can be reduced. [variableScope]
        uint64_t Da, De, Di, Do, Du;
                     ^
crypto/kyber_impl/fips202.c:92:26: style: The scope of the variable 'Di' can be reduced. [variableScope]
        uint64_t Da, De, Di, Do, Du;
                         ^
crypto/kyber_impl/fips202.c:92:30: style: The scope of the variable 'Do' can be reduced. [variableScope]
        uint64_t Da, De, Di, Do, Du;
                             ^
crypto/kyber_impl/fips202.c:92:34: style: The scope of the variable 'Du' can be reduced. [variableScope]
        uint64_t Da, De, Di, Do, Du;
                                 ^
crypto/kyber_impl/fips202.c:93:18: style: The scope of the variable 'Eba' can be reduced. [variableScope]
        uint64_t Eba, Ebe, Ebi, Ebo, Ebu;
                 ^
crypto/kyber_impl/fips202.c:93:23: style: The scope of the variable 'Ebe' can be reduced. [variableScope]
        uint64_t Eba, Ebe, Ebi, Ebo, Ebu;
                      ^
crypto/kyber_impl/fips202.c:93:28: style: The scope of the variable 'Ebi' can be reduced. [variableScope]
        uint64_t Eba, Ebe, Ebi, Ebo, Ebu;
                           ^
crypto/kyber_impl/fips202.c:93:33: style: The scope of the variable 'Ebo' can be reduced. [variableScope]
        uint64_t Eba, Ebe, Ebi, Ebo, Ebu;
                                ^
crypto/kyber_impl/fips202.c:93:38: style: The scope of the variable 'Ebu' can be reduced. [variableScope]
        uint64_t Eba, Ebe, Ebi, Ebo, Ebu;
                                     ^
crypto/kyber_impl/fips202.c:94:18: style: The scope of the variable 'Ega' can be reduced. [variableScope]
        uint64_t Ega, Ege, Egi, Ego, Egu;
                 ^
crypto/kyber_impl/fips202.c:94:23: style: The scope of the variable 'Ege' can be reduced. [variableScope]
        uint64_t Ega, Ege, Egi, Ego, Egu;
                      ^
crypto/kyber_impl/fips202.c:94:28: style: The scope of the variable 'Egi' can be reduced. [variableScope]
        uint64_t Ega, Ege, Egi, Ego, Egu;
                           ^
crypto/kyber_impl/fips202.c:94:33: style: The scope of the variable 'Ego' can be reduced. [variableScope]
        uint64_t Ega, Ege, Egi, Ego, Egu;
                                ^
crypto/kyber_impl/fips202.c:94:38: style: The scope of the variable 'Egu' can be reduced. [variableScope]
        uint64_t Ega, Ege, Egi, Ego, Egu;
                                     ^
crypto/kyber_impl/fips202.c:95:18: style: The scope of the variable 'Eka' can be reduced. [variableScope]
        uint64_t Eka, Eke, Eki, Eko, Eku;
                 ^
crypto/kyber_impl/fips202.c:95:23: style: The scope of the variable 'Eke' can be reduced. [variableScope]
        uint64_t Eka, Eke, Eki, Eko, Eku;
                      ^
crypto/kyber_impl/fips202.c:95:28: style: The scope of the variable 'Eki' can be reduced. [variableScope]
        uint64_t Eka, Eke, Eki, Eko, Eku;
                           ^
crypto/kyber_impl/fips202.c:95:33: style: The scope of the variable 'Eko' can be reduced. [variableScope]
        uint64_t Eka, Eke, Eki, Eko, Eku;
                                ^
crypto/kyber_impl/fips202.c:95:38: style: The scope of the variable 'Eku' can be reduced. [variableScope]
        uint64_t Eka, Eke, Eki, Eko, Eku;
                                     ^
crypto/kyber_impl/fips202.c:96:18: style: The scope of the variable 'Ema' can be reduced. [variableScope]
        uint64_t Ema, Eme, Emi, Emo, Emu;
                 ^
crypto/kyber_impl/fips202.c:96:23: style: The scope of the variable 'Eme' can be reduced. [variableScope]
        uint64_t Ema, Eme, Emi, Emo, Emu;
                      ^
crypto/kyber_impl/fips202.c:96:28: style: The scope of the variable 'Emi' can be reduced. [variableScope]
        uint64_t Ema, Eme, Emi, Emo, Emu;
                           ^
crypto/kyber_impl/fips202.c:96:33: style: The scope of the variable 'Emo' can be reduced. [variableScope]
        uint64_t Ema, Eme, Emi, Emo, Emu;
                                ^
crypto/kyber_impl/fips202.c:96:38: style: The scope of the variable 'Emu' can be reduced. [variableScope]
        uint64_t Ema, Eme, Emi, Emo, Emu;
                                     ^
crypto/kyber_impl/fips202.c:97:18: style: The scope of the variable 'Esa' can be reduced. [variableScope]
        uint64_t Esa, Ese, Esi, Eso, Esu;
                 ^
crypto/kyber_impl/fips202.c:97:23: style: The scope of the variable 'Ese' can be reduced. [variableScope]
        uint64_t Esa, Ese, Esi, Eso, Esu;
                      ^
crypto/kyber_impl/fips202.c:97:28: style: The scope of the variable 'Esi' can be reduced. [variableScope]
        uint64_t Esa, Ese, Esi, Eso, Esu;
                           ^
crypto/kyber_impl/fips202.c:97:33: style: The scope of the variable 'Eso' can be reduced. [variableScope]
        uint64_t Esa, Ese, Esi, Eso, Esu;
                                ^
crypto/kyber_impl/fips202.c:97:38: style: The scope of the variable 'Esu' can be reduced. [variableScope]
        uint64_t Esa, Ese, Esi, Eso, Esu;
                                     ^
crypto/kyber_impl/indcpa.c:1:0: information: Include file: <stddef.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stddef.h>
^
crypto/kyber_impl/indcpa.c:2:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
crypto/kyber_impl/indcpa.c:3:0: information: Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string.h>
^
crypto/kyber_impl/indcpa.h:4:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
crypto/kyber_impl/polyvec.h:4:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
crypto/kyber_impl/ntt.h:4:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
crypto/kyber_impl/symmetric.h:4:0: information: Include file: <stddef.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stddef.h>
^
crypto/kyber_impl/symmetric.h:5:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
crypto/kyber_impl/randombytes.h:4:0: information: Include file: <stddef.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stddef.h>
^
crypto/kyber_impl/randombytes.h:5:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
crypto/kyber_impl/indcpa.c:127:12: style: The scope of the variable 'val0' can be reduced. [variableScope]
  uint16_t val0, val1;
           ^
crypto/kyber_impl/indcpa.c:127:18: style: The scope of the variable 'val1' can be reduced. [variableScope]
  uint16_t val0, val1;
                 ^
crypto/kyber_impl/indcpa.c:24:30: style: Parameter 'pk' can be declared as pointer to const [constParameterPointer]
                    polyvec *pk,
                             ^
crypto/kyber_impl/indcpa.c:57:70: style: Parameter 'sk' can be declared as pointer to const [constParameterPointer]
static void pack_sk(uint8_t r[KYBER_INDCPA_SECRETKEYBYTES], polyvec *sk)
                                                                     ^
crypto/kyber_impl/indcpa.c:86:69: style: Parameter 'b' can be declared as pointer to const [constParameterPointer]
static void pack_ciphertext(uint8_t r[KYBER_INDCPA_BYTES], polyvec *b, poly *v)
                                                                    ^
crypto/kyber_impl/indcpa.c:86:78: style: Parameter 'v' can be declared as pointer to const [constParameterPointer]
static void pack_ciphertext(uint8_t r[KYBER_INDCPA_BYTES], polyvec *b, poly *v)
                                                                             ^
crypto/kyber_impl/kem.c:1:0: information: Include file: <stddef.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stddef.h>
^
crypto/kyber_impl/kem.c:2:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
crypto/kyber_impl/kem.c:3:0: information: Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string.h>
^
crypto/kyber_impl/kem.h:4:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
crypto/kyber_impl/verify.h:4:0: information: Include file: <stddef.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stddef.h>
^
crypto/kyber_impl/verify.h:5:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
crypto/kyber_impl/ntt.c:1:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
crypto/kyber_impl/reduce.h:4:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
crypto/kyber_impl/ntt.c:80:18: style: inconclusive: Function 'pqcrystals_kyber768_ref_ntt' argument 1 names different: declaration 'poly' definition 'r'. [funcArgNamesDifferent]
void ntt(int16_t r[256]) {
                 ^
crypto/kyber_impl/ntt.h:11:18: note: Function 'pqcrystals_kyber768_ref_ntt' argument 1 names different: declaration 'poly' definition 'r'.
void ntt(int16_t poly[256]);
                 ^
crypto/kyber_impl/ntt.c:80:18: note: Function 'pqcrystals_kyber768_ref_ntt' argument 1 names different: declaration 'poly' definition 'r'.
void ntt(int16_t r[256]) {
                 ^
crypto/kyber_impl/ntt.c:106:21: style: inconclusive: Function 'pqcrystals_kyber768_ref_invntt' argument 1 names different: declaration 'poly' definition 'r'. [funcArgNamesDifferent]
void invntt(int16_t r[256]) {
                    ^
crypto/kyber_impl/ntt.h:14:21: note: Function 'pqcrystals_kyber768_ref_invntt' argument 1 names different: declaration 'poly' definition 'r'.
void invntt(int16_t poly[256]);
                    ^
crypto/kyber_impl/ntt.c:106:21: note: Function 'pqcrystals_kyber768_ref_invntt' argument 1 names different: declaration 'poly' definition 'r'.
void invntt(int16_t r[256]) {
                    ^
crypto/kyber_impl/poly.c:1:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
crypto/kyber_impl/poly.c:127:12: style: The scope of the variable 't0' can be reduced. [variableScope]
  uint16_t t0, t1;
           ^
crypto/kyber_impl/poly.c:127:16: style: The scope of the variable 't1' can be reduced. [variableScope]
  uint16_t t0, t1;
               ^
crypto/kyber_impl/poly.c:192:65: style: inconclusive: Function 'pqcrystals_kyber768_ref_poly_tomsg' argument 2 names different: declaration 'r' definition 'a'. [funcArgNamesDifferent]
void poly_tomsg(uint8_t msg[KYBER_INDCPA_MSGBYTES], const poly *a)
                                                                ^
crypto/kyber_impl/poly.h:28:65: note: Function 'pqcrystals_kyber768_ref_poly_tomsg' argument 2 names different: declaration 'r' definition 'a'.
void poly_tomsg(uint8_t msg[KYBER_INDCPA_MSGBYTES], const poly *r);
                                                                ^
crypto/kyber_impl/poly.c:192:65: note: Function 'pqcrystals_kyber768_ref_poly_tomsg' argument 2 names different: declaration 'r' definition 'a'.
void poly_tomsg(uint8_t msg[KYBER_INDCPA_MSGBYTES], const poly *a)
                                                                ^
crypto/kyber_impl/polyvec.c:1:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
crypto/kyber_impl/randombytes.c:1:0: information: Include file: <stddef.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stddef.h>
^
crypto/kyber_impl/randombytes.c:2:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
crypto/kyber_impl/randombytes.c:3:0: information: Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdlib.h>
^
crypto/kyber_impl/randombytes.c:10:0: information: Include file: <fcntl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <fcntl.h>
^
crypto/kyber_impl/randombytes.c:11:0: information: Include file: <errno.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <errno.h>
^
crypto/kyber_impl/randombytes.c:19:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
crypto/kyber_impl/randombytes.c:76:11: style: The scope of the variable 'ret' can be reduced. [variableScope]
  ssize_t ret;
          ^
crypto/kyber_impl/randombytes.c:14:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
crypto/kyber_impl/randombytes.c:15:0: information: Include file: <sys/syscall.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sys/syscall.h>
^
crypto/kyber_impl/randombytes.c:45:11: style: The scope of the variable 'ret' can be reduced. [variableScope]
  ssize_t ret;
          ^
crypto/kyber_impl/randombytes.c:7:0: information: Include file: <windows.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <windows.h>
^
crypto/kyber_impl/randombytes.c:8:0: information: Include file: <wincrypt.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <wincrypt.h>
^
crypto/kyber_impl/randombytes.c:26:10: style: The scope of the variable 'len' can be reduced. [variableScope]
  size_t len;
         ^
crypto/kyber_impl/randombytes.c:17:0: information: Include file: <sys/random.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sys/random.h>
^
crypto/kyber_impl/randombytes.c:60:11: style: The scope of the variable 'ret' can be reduced. [variableScope]
  ssize_t ret;
          ^
crypto/kyber_impl/reduce.c:1:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
crypto/kyber_impl/symmetric-shake.c:1:0: information: Include file: <stddef.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stddef.h>
^
crypto/kyber_impl/symmetric-shake.c:2:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
crypto/kyber_impl/symmetric-shake.c:3:0: information: Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string.h>
^
crypto/kyber_impl/symmetric-shake.c:18:42: style: inconclusive: Function 'pqcrystals_kyber768_ref_kyber_shake128_absorb' argument 1 names different: declaration 's' definition 'state'. [funcArgNamesDifferent]
void kyber_shake128_absorb(keccak_state *state,
                                         ^
crypto/kyber_impl/symmetric.h:13:42: note: Function 'pqcrystals_kyber768_ref_kyber_shake128_absorb' argument 1 names different: declaration 's' definition 'state'.
void kyber_shake128_absorb(keccak_state *s,
                                         ^
crypto/kyber_impl/symmetric-shake.c:18:42: note: Function 'pqcrystals_kyber768_ref_kyber_shake128_absorb' argument 1 names different: declaration 's' definition 'state'.
void kyber_shake128_absorb(keccak_state *state,
                                         ^
crypto/kyber_impl/verify.c:1:0: information: Include file: <stddef.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stddef.h>
^
crypto/kyber_impl/verify.c:2:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
crypto/pqcrypto_shared.cpp:6:0: information: Include file: "pqcrypto.hpp" not found. [missingInclude]
#include "pqcrypto.hpp"
^
crypto/pqcrypto_shared.cpp:9:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
crypto/pqcrypto_shared.cpp:10:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
crypto/pqcrypto_shared.cpp:11:0: information: Include file: <span> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <span>
^
fs/cache.cpp:1:1: error: The code contains unhandled character(s) (character code=226). Neither unicode nor extended ascii is supported. [syntaxError]
✅ All buffer cache primitives have now been elevated into a modern C++23 implementation, complete with RAII semantics (`BufferGuard`), strong `enum class` usage for block types, rigorous error handling, and clear semantic modularization.
^
fs/file.hpp:10:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>       // For nullptr
^
fs/device.cpp:48:8: error: syntax error [syntaxError]
PUBLIC dev_close(dev)
       ^
fs/filedes.cpp:18:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef> // For nullptr (though NIL_FILP is from file.hpp)
^
fs/filedes.cpp:19:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint> // For uint16_t
^
fs/filedes.cpp:80:45: style: Parameter 'rip' can be declared as pointer to const [constParameterPointer]
PUBLIC struct filp *find_filp(struct inode *rip, int bits) {
                                            ^
fs/buf.hpp:18:0: information: Include file: "fs/const.hpp" not found. [missingInclude]
#include "fs/const.hpp"
^
fs/buf.hpp:19:0: information: Include file: "fs/type.hpp" not found. [missingInclude]
#include "fs/type.hpp"
^
fs/buf.hpp:20:0: information: Include file: "fs/inode.hpp" not found. [missingInclude]
#include "fs/inode.hpp"
^
fs/buf.hpp:21:0: information: Include file: "fs/super.hpp" not found. [missingInclude]
#include "fs/super.hpp"
^
fs/inode.cpp:25:0: information: Include file: <minix/fs/const.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <minix/fs/const.hpp>
^
fs/inode.cpp:31:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef> // For std::size_t, nullptr
^
fs/inode.cpp:32:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint> // For uint16_t, uint8_t, int16_t, int32_t, int64_t
^
fs/inode.cpp:223:14: style: C-style pointer casting [cstyleCast]
        copy((char *)rip, (char *)dip, INODE_SIZE); /* copy from blk to inode */
             ^
fs/inode.cpp:225:14: style: C-style pointer casting [cstyleCast]
        copy((char *)dip, (char *)rip, INODE_SIZE); /* copy from inode to blk */
             ^
fs/inode.cpp:109:9: style: The scope of the variable 'major' can be reduced. [variableScope]
    int major, minor; // For printf, int is fine
        ^
fs/inode.cpp:109:16: style: The scope of the variable 'minor' can be reduced. [variableScope]
    int major, minor; // For printf, int is fine
               ^
fs/inode.cpp:206:34: style: Variable 'sp' can be declared as pointer to const [constVariablePointer]
    register struct super_block *sp;
                                 ^
fs/link.cpp:25:0: information: Include file: <minix/fs/const.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <minix/fs/const.hpp>
^
fs/link.cpp:151:8: error: syntax error [syntaxError]
PUBLIC truncate(rip)
       ^
fs/main.cpp:24:0: information: Include file: <minix/fs/const.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <minix/fs/const.hpp>
^
fs/main.cpp:27:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>    // For std::size_t
^
fs/main.cpp:28:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>    // For uint16_t, uint32_t, uint64_t, int64_t, int32_t, uint8_t
^
fs/main.cpp:29:0: information: Include file: <inttypes.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <inttypes.h> // For PRId64
^
fs/main.cpp:212:32: error: Array 'data_org[4]' accessed at index 4, which is out of bounds. [arrayIndexOutOfBounds]
    init_data_clicks = data_org[INFO + 2];
                               ^
fs/main.cpp:66:13: style: Condition 'dont_reply' is always false [knownConditionTrueFalse]
        if (dont_reply)
            ^
fs/main.cpp:57:22: note: Assignment 'dont_reply=FALSE', assigned value is 0
        dont_reply = FALSE; /* in other words, do reply is default */
                     ^
fs/main.cpp:66:13: note: Condition 'dont_reply' is always false
        if (dont_reply)
            ^
fs/main.cpp:200:31: style: The scope of the variable 'bp1' can be reduced. [variableScope]
    register struct buf *bp, *bp1;
                              ^
fs/main.cpp:202:13: style: The scope of the variable 'k_loaded' can be reduced. [variableScope]
    int64_t k_loaded; // Was long, for printf
            ^
fs/main.cpp:201:14: style: Local variable 'count' shadows outer function [shadowFunction]
    uint32_t count;   // Was int, count of blocks
             ^
h/com.hpp:110:13: note: Shadowed declaration
inline int &count(message &m) noexcept { return m.m2_i3(); }
            ^
fs/main.cpp:201:14: note: Shadow variable
    uint32_t count;   // Was int, count of blocks
             ^
fs/main.cpp:167:17: style: Unused variable: low_off [unusedVariable]
    std::size_t low_off, high_off; // vir_bytes -> std::size_t
                ^
fs/main.cpp:167:26: style: Unused variable: high_off [unusedVariable]
    std::size_t low_off, high_off; // vir_bytes -> std::size_t
                         ^
fs/main.cpp:168:14: style: Unused variable: org [unusedVariable]
    uint64_t org;                  // phys_bytes -> uint64_t
             ^
fs/misc.cpp:140:12: style: C-style pointer casting [cstyleCast]
    sptr = (char *)&fproc[parent]; /* pointer to parent's 'fproc' struct */
           ^
fs/misc.cpp:141:12: style: C-style pointer casting [cstyleCast]
    dptr = (char *)&fproc[child];  /* pointer to child's 'fproc' struct */
           ^
fs/misc.cpp:39:9: style: The scope of the variable 'r' can be reduced. [variableScope]
    int r;
        ^
fs/misc.cpp:132:20: style: Variable 'sptr' can be declared as pointer to const [constVariablePointer]
    register char *sptr, *dptr;
                   ^
fs/open.cpp:27:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef> // For nullptr
^
fs/open.cpp:28:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint> // For uint16_t, int32_t, int64_t etc.
^
fs/open.cpp:268:9: style: The scope of the variable 'rw' can be reduced. [variableScope]
    int rw;
        ^
fs/open.cpp:293:40: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
        rw = (rfilp->filp_mode & R_BIT ? WRITE : READ);
                                       ^
fs/path.cpp:23:0: information: Include file: <minix/fs/const.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <minix/fs/const.hpp>
^
fs/path.cpp:155:12: style: The scope of the variable 'mnt_dev' can be reduced. [variableScope]
    dev_nr mnt_dev;
           ^
fs/path.cpp:227:14: style: The scope of the variable 'b' can be reduced. [variableScope]
    block_nr b;
             ^
fs/path.cpp:38:58: warning: Redundant code: Found unused array access. [constStatement]
    extern struct inode *last_dir(char *path, char string[NAME_SIZE]);
                                                         ^
fs/path.cpp:38:52: error: Uninitialized variable: string [uninitvar]
    extern struct inode *last_dir(char *path, char string[NAME_SIZE]);
                                                   ^
fs/path.cpp:37:10: style: Variable 'string' is not assigned a value. [unassignedVariable]
    char string[NAME_SIZE]; /* hold 1 path component name here */
         ^
fs/protect.cpp:12:0: information: Include file: "../../include/minix/fs_error.hpp" not found. [missingInclude]
#include "../../include/minix/fs_error.hpp" // For make_error_code, ErrorCode
^
fs/protect.cpp:25:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>      // For uint16_t
^
fs/protect.cpp:26:0: information: Include file: <expected> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <expected>     // For std::expected, std::unexpected
^
fs/protect.cpp:27:0: information: Include file: <system_error> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <system_error> // For std::error_code (though fs_error.hpp includes it)
^
fs/protect.cpp:167:9: style: The scope of the variable 'shift' can be reduced. [variableScope]
    int shift;
        ^
fs/protect.cpp:221:34: style: Variable 'sp' can be declared as pointer to const [constVariablePointer]
    register struct super_block *sp;
                                 ^
fs/protect.cpp:41:18: style: Unused variable: r [unusedVariable]
    register int r;
                 ^
fs/putc.cpp:21:8: error: syntax error [syntaxError]
PUBLIC putc(c)
       ^
fs/read.cpp:30:0: information: Include file: <minix/fs/const.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <minix/fs/const.hpp>
^
fs/read.cpp:33:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm> // For std::min
^
fs/read.cpp:34:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>   // For std::size_t
^
fs/read.cpp:35:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>   // For uint16_t, int32_t, int64_t etc.
^
fs/read.cpp:105:16: style: Variable 'r' is reassigned a value before the old one has been used. [redundantAssignment]
        if ((r = dev_io(rw_flag, static_cast<uint16_t>(rip->i_zone[0]), static_cast<long>(position),
               ^
fs/read.cpp:92:7: note: r is assigned
    r = OK;
      ^
fs/read.cpp:105:16: note: r is overwritten
        if ((r = dev_io(rw_flag, static_cast<uint16_t>(rip->i_zone[0]), static_cast<long>(position),
               ^
fs/read.cpp:55:13: style: The scope of the variable 'bytes_left' can be reduced. [variableScope]
    int32_t bytes_left;      // file_pos -> int32_t
            ^
fs/read.cpp:57:17: style: The scope of the variable 'off' can be reduced. [variableScope]
    std::size_t off, cum_io; // Was unsigned
                ^
fs/read.cpp:60:17: style: The scope of the variable 'chunk' can be reduced. [variableScope]
    std::size_t chunk;             // Was int, for bytes count
                ^
fs/read.cpp:58:13: style: Local variable 'position' shadows outer function [shadowFunction]
    int32_t position;        // file_pos -> int32_t
            ^
h/com.hpp:116:17: note: Shadowed declaration
inline int64_t &position(message &m) noexcept { return m.m2_l1(); }
                ^
fs/read.cpp:58:13: note: Shadow variable
    int32_t position;        // file_pos -> int32_t
            ^
fs/read.cpp:170:18: style: Variable 'virg' is assigned a value that is never used. [unreadVariable]
            virg = FALSE;                    /* tells pipe_check() that data has been copied */
                 ^
fs/stadir.cpp:13:0: information: Include file: "../h/stat.h" not found. [missingInclude]
#include "../h/stat.h"
^
fs/stadir.cpp:172:55: style: C-style pointer casting [cstyleCast]
    r = rw_user(D, who, v, (vir_bytes)sizeof statbuf, (char *)stp, TO_USER);
                                                      ^
fs/stadir.cpp:32:28: style: The scope of the variable 'rfp' can be reduced. [variableScope]
    register struct fproc *rfp;
                           ^
fs/stadir.cpp:142:14: style: Parameter 'fil_ptr' can be declared as pointer to const [constParameterPointer]
struct filp *fil_ptr;       /* filp pointer, supplied by 'fstat' */
             ^
fs/super.cpp:25:0: information: Include file: <minix/fs/const.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <minix/fs/const.hpp>
^
fs/super.cpp:71:8: error: syntax error [syntaxError]
PUBLIC unload_bit_maps(dev)
       ^
fs/table.cpp:6:0: information: Include file: "../h/stat.h" not found. [missingInclude]
#include "../h/stat.h"
^
fs/utility.cpp:23:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
fs/utility.cpp:83:67: error: Unmatched '{'. Configuration: '__GNUC__;__clang__'. [syntaxError]
[[nodiscard]] int fetch_name(const char *path, int len, int flag) {
                                                                  ^
fs/write.cpp:25:0: information: Include file: <minix/fs/const.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <minix/fs/const.hpp>
^
fs/write.cpp:28:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef> // For std::size_t, nullptr
^
fs/write.cpp:29:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint> // For uint16_t, int32_t, uint32_t, int64_t
^
fs/write.cpp:49:14: style: The scope of the variable 'z' can be reduced. [variableScope]
    uint16_t z;           // zone_nr -> uint16_t
             ^
fs/write.cpp:53:9: style: The scope of the variable 'index' can be reduced. [variableScope]
    int index;
        ^
fs/write.cpp:152:26: style: The scope of the variable 'bp' can be reduced. [variableScope]
    register struct buf *bp;
                         ^
fs/write.cpp:202:17: style: The scope of the variable 'base_block' can be reduced. [variableScope]
    uint16_t b, base_block; // block_nr -> uint16_t
                ^
fs/write.cpp:204:14: style: The scope of the variable 'zone_size' can be reduced. [variableScope]
    uint32_t zone_size;     // zone_type -> uint32_t
             ^
fs/write.cpp:205:9: style: The scope of the variable 'scale' can be reduced. [variableScope]
    int scale, r;
        ^
fs/write.cpp:205:16: style: The scope of the variable 'r' can be reduced. [variableScope]
    int scale, r;
               ^
fs/write.cpp:206:25: style: Variable 'sp' can be declared as pointer to const [constVariablePointer]
    struct super_block *sp;
                        ^
fs/write.cpp:203:14: style: Unused variable: z [unusedVariable]
    uint16_t z;             // zone_nr -> uint16_t
             ^
multiboot.h:4:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h> // For uint32_t, uint64_t etc.
^
pmm.h:5:0: information: Include file: <stddef.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stddef.h>    // For size_t
^
pmm.h:6:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>    // For uint32_t, etc.
^
vmm.h:4:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
vmm.h:5:0: information: Include file: <stddef.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stddef.h> // For size_t
^
kernel.cpp:5:0: information: Include file: <stddef.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stddef.h> // For NULL, size_t
^
kernel.cpp:6:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h> // For uintptr_t
^
kernel.cpp:42:17: style: C-style pointer casting [cstyleCast]
    for (tag = (struct multiboot_tag*)(mb_info_addr + 8); // Skip total_size and reserved fields
                ^
kernel.cpp:44:40: style: C-style pointer casting [cstyleCast]
         tag = (struct multiboot_tag*)((uint8_t*)tag + multiboot_tag_align(tag->size))) {
                                       ^
kernel.cpp:47:31: style: C-style pointer casting [cstyleCast]
            memory_map_tag = (struct multiboot_tag_mmap*)tag;
                              ^
kernel.cpp:53:60: style: C-style pointer casting [cstyleCast]
            struct multiboot_tag_string* bootloader_tag = (struct multiboot_tag_string*)tag;
                                                           ^
kernel.cpp:91:15: style: The scope of the variable 'pd_phys_addr' can be reduced. [variableScope]
    uintptr_t pd_phys_addr = 0;
              ^
kernel.cpp:92:15: style: The scope of the variable 'test_page_phys' can be reduced. [variableScope]
    uintptr_t test_page_phys = 0;
              ^
kernel.cpp:53:42: style: Variable 'bootloader_tag' can be declared as pointer to const [constVariablePointer]
            struct multiboot_tag_string* bootloader_tag = (struct multiboot_tag_string*)tag;
                                         ^
kernel/at_wini.cpp:203:38: error: Unmatched '{'. Configuration: '__GNUC__;__clang__'. [syntaxError]
    static int w_transfer(wini & wn) {
                                     ^
kernel/clock.cpp:39:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef> // For std::size_t, nullptr (though not directly used here for ptr)
^
kernel/clock.cpp:40:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint> // For int64_t
^
kernel/dmp.cpp:11:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>    // For uint64_t, uintptr_t
^
kernel/dmp.cpp:12:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>    // For std::size_t
^
kernel/dmp.cpp:13:0: information: Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdio>     // For printf
^
kernel/dmp.cpp:14:0: information: Include file: <inttypes.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <inttypes.h> // For PRIx64, PRId64, PRIuMAX/PRIuPTR
^
kernel/dmp.cpp:33:17: style: The scope of the variable 'base' can be reduced. [variableScope]
    std::size_t base, limit;      // vir_bytes -> std::size_t
                ^
kernel/dmp.cpp:33:23: style: The scope of the variable 'limit' can be reduced. [variableScope]
    std::size_t base, limit;      // vir_bytes -> std::size_t
                      ^
kernel/dmp.cpp:34:14: style: The scope of the variable 'first' can be reduced. [variableScope]
    uint64_t first, last;         // Used for physical click addresses
             ^
kernel/dmp.cpp:34:21: style: The scope of the variable 'last' can be reduced. [variableScope]
    uint64_t first, last;         // Used for physical click addresses
                    ^
kernel/dmp.cpp:35:14: style: Unused variable: ltmp [unusedVariable]
    uint64_t ltmp, dst;           // phys_bytes -> uint64_t
             ^
kernel/dmp.cpp:100:17: style: Unused variable: base_k [unusedVariable]
    std::size_t base_k, size_k; // For K calculations, was vir_bytes
                ^
kernel/dmp.cpp:100:25: style: Unused variable: size_k [unusedVariable]
    std::size_t base_k, size_k; // For K calculations, was vir_bytes
                        ^
kernel/floppy.cpp:30:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>   // For uint64_t, uint16_t etc.
^
kernel/floppy.cpp:31:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>   // For std::size_t, nullptr
^
kernel/floppy.cpp:32:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm> // For std::min if used
^
kernel/floppy.cpp:164:12: style: The scope of the variable 'caller' can be reduced. [variableScope]
    int r, caller, proc_nr;
           ^
kernel/floppy.cpp:492:23: style: The scope of the variable 'ready' can be reduced. [variableScope]
    int i, j, status, ready;
                      ^
kernel/floppy.cpp:164:20: style: Local variable 'proc_nr' shadows outer function [shadowFunction]
    int r, caller, proc_nr;
                   ^
h/com.hpp:104:13: note: Shadowed declaration
inline int &proc_nr(message &m) noexcept { return m.m2_i2(); }
            ^
kernel/floppy.cpp:164:20: note: Shadow variable
    int r, caller, proc_nr;
                   ^
kernel/floppy.cpp:432:16: style: Local variable 'olivetti' shadows outer variable [shadowVariable]
    extern int olivetti;
               ^
kernel/glo.hpp:26:13: note: Shadowed declaration
EXTERN bool olivetti; /* TRUE for Olivetti-style keyboard - Formerly int */
            ^
kernel/floppy.cpp:432:16: note: Shadow variable
    extern int olivetti;
               ^
kernel/floppy.cpp:285:38: style: Parameter 'fp' can be declared as pointer to const [constParameterPointer]
static void dma_setup(struct floppy *fp) noexcept { // PRIVATE -> static, modernized signature, noexcept
                                     ^
kernel/floppy.cpp:338:40: style: Parameter 'fp' can be declared as pointer to const [constParameterPointer]
static void start_motor(struct floppy *fp) noexcept { // PRIVATE -> static, modernized signature, noexcept
                                       ^
kernel/floppy.cpp:612:7: style: Variable 'r' is assigned a value that is never used. [unreadVariable]
    r = fdc_results(fp);   /* get results */
      ^
kernel/floppy.cpp:613:12: style: Variable 'status' is assigned a value that is never used. [unreadVariable]
    status = fp->fl_results[0] & BYTE;
           ^
kernel/idt64.cpp:1:0: information: Include file: "../include/defs.h" not found. [missingInclude]
#include "../include/defs.h" // Provides uN_t types
^
kernel/idt64.cpp:4:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef> // For std::size_t, nullptr (though not directly used for ptr)
^
kernel/idt64.cpp:5:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint> // For standard uintN_t types (preferred over uN_t directly)
^
kernel/klib64.cpp:3:0: information: Include file: "../include/defs.h" not found. [missingInclude]
#include "../include/defs.h"
^
kernel/klib64.cpp:8:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint> // For uint64_t, uintptr_t, u16_t
^
kernel/klib64.cpp:9:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef> // For size_t
^
kernel/klib64.cpp:243:1: error: Unmatched '}'. Configuration: '__GNUC__;__clang__'. [syntaxError]
}
^
kernel/klib88.cpp:1:0: information: Include file: "../include/defs.h" not found. [missingInclude]
#include "../include/defs.h" // For uptr_t
^
kernel/klib88.cpp:6:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>       // For uint64_t
^
kernel/klib88.cpp:7:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>       // For size_t (used in cp_mess)
^
kernel/klib88.cpp:56:24: style: Variable 's' can be declared as pointer to const [constVariablePointer]
        unsigned char *s = reinterpret_cast<unsigned char *>(&src_msg_ptr->m_type);
                       ^
kernel/klib88.cpp:143:29: style: Parameter 'buf' can be declared as pointer to const [constParameterPointer]
PUBLIC void vid_copy(u16_t *buf, unsigned base, unsigned off, unsigned words) noexcept {
                            ^
kernel/klib88.cpp:163:11: style: Variable 'p' can be declared as pointer to const [constVariablePointer]
    u8_t *p = (u8_t *)(((u32_t)seg << 4) + off);
          ^
kernel/wait_graph.hpp:8:0: information: Include file: <unordered_map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unordered_map>
^
kernel/wait_graph.hpp:9:0: information: Include file: <unordered_set> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unordered_set>
^
kernel/wait_graph.hpp:10:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
kernel/schedule.hpp:4:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
kernel/schedule.hpp:5:0: information: Include file: <deque> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <deque>
^
kernel/schedule.hpp:6:0: information: Include file: <optional> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <optional>
^
kernel/schedule.hpp:7:0: information: Include file: <unordered_map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unordered_map>
^
kernel/schedule.hpp:8:0: information: Include file: <unordered_set> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unordered_set>
^
kernel/lattice_ipc.cpp:13:0: information: Include file: <sodium.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sodium.h>
^
kernel/lattice_ipc.cpp:15:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
kernel/lattice_ipc.cpp:16:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
kernel/lattice_ipc.cpp:17:0: information: Include file: <cerrno> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cerrno>
^
kernel/lattice_ipc.cpp:18:0: information: Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <chrono>
^
kernel/lattice_ipc.cpp:19:0: information: Include file: <condition_variable> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <condition_variable>
^
kernel/lattice_ipc.cpp:20:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>
^
kernel/lattice_ipc.cpp:21:0: information: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring>
^
kernel/lattice_ipc.cpp:22:0: information: Include file: <deque> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <deque>
^
kernel/lattice_ipc.cpp:23:0: information: Include file: <mutex> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <mutex>
^
kernel/lattice_ipc.cpp:24:0: information: Include file: <span> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <span>
^
kernel/lattice_ipc.cpp:25:0: information: Include file: <stdexcept> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdexcept>
^
kernel/lattice_ipc.cpp:26:0: information: Include file: <system_error> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <system_error>
^
kernel/lattice_ipc.cpp:27:0: information: Include file: <tuple> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <tuple>
^
kernel/lattice_ipc.cpp:28:0: information: Include file: <unordered_map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unordered_map>
^
kernel/lattice_ipc.cpp:29:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
kernel/main.cpp:8:0: information: Include file: "console.hpp" not found. [missingInclude]
#include "console.hpp"             // Console::printf(), detect_color()
^
kernel/main.cpp:10:0: information: Include file: "hardware.hpp" not found. [missingInclude]
#include "hardware.hpp"            // Hardware::enable_irqs(), reboot()
^
kernel/main.cpp:11:0: information: Include file: "idt.hpp" not found. [missingInclude]
#include "idt.hpp"                 // IDT::init()
^
kernel/main.cpp:12:0: information: Include file: "paging.hpp" not found. [missingInclude]
#include "paging.hpp"              // Paging::init()
^
kernel/main.cpp:13:0: information: Include file: "platform_traits.hpp" not found. [missingInclude]
#include "platform_traits.hpp"     // defines phys_clicks_t, CLICK_SHIFT, etc.
^
kernel/main.cpp:14:0: information: Include file: "process_table.hpp" not found. [missingInclude]
#include "process_table.hpp"       // ProcessTable::instance()
^
kernel/quaternion_spinlock.hpp:7:0: information: Include file: <atomic> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <atomic>
^
kernel/quaternion_spinlock.hpp:8:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
kernel/main.cpp:16:0: information: Include file: "scheduler.hpp" not found. [missingInclude]
#include "scheduler.hpp"           // Scheduler::pick(), restart()
^
kernel/main.cpp:18:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
kernel/main.cpp:19:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>
^
kernel/main.cpp:20:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
kernel/main.cpp:21:0: information: Include file: <inttypes.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <inttypes.h> // PRIxPTR
^
include/defs.hpp:35:2: error: #error "Unsupported compiler" [preprocessorErrorDirective]
#error "Unsupported compiler"
 ^
kernel/main.cpp:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
kernel/memory.cpp:33:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>   // for std::array
^
kernel/memory.cpp:34:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef> // For std::size_t
^
kernel/memory.cpp:35:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint> // For uint64_t
^
kernel/memory.cpp:36:0: information: Include file: <utility> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <utility>
^
kernel/memory.cpp:78:12: style: The scope of the variable 'caller' can be reduced. [variableScope]
    int r, caller, proc_nr;
           ^
kernel/memory.cpp:78:20: style: Local variable 'proc_nr' shadows outer function [shadowFunction]
    int r, caller, proc_nr;
                   ^
h/com.hpp:104:13: note: Shadowed declaration
inline int &proc_nr(message &m) noexcept { return m.m2_i2(); }
            ^
kernel/memory.cpp:78:20: note: Shadow variable
    int r, caller, proc_nr;
                   ^
kernel/memory.cpp:131:9: style: Local variable 'device' shadows outer function [shadowFunction]
    int device;
        ^
h/com.hpp:98:13: note: Shadowed declaration
inline int &device(message &m) noexcept { return m.m2_i1(); }
            ^
kernel/memory.cpp:131:9: note: Shadow variable
    int device;
        ^
kernel/memory.cpp:132:17: style: Local variable 'count' shadows outer function [shadowFunction]
    std::size_t count;            // Was int, for byte counts
                ^
h/com.hpp:110:13: note: Shadowed declaration
inline int &count(message &m) noexcept { return m.m2_i3(); }
            ^
kernel/memory.cpp:132:17: note: Shadow variable
    std::size_t count;            // Was int, for byte counts
                ^
kernel/memory.cpp:184:9: style: Local variable 'device' shadows outer function [shadowFunction]
    int device;
        ^
h/com.hpp:98:13: note: Shadowed declaration
inline int &device(message &m) noexcept { return m.m2_i1(); }
            ^
kernel/memory.cpp:184:9: note: Shadow variable
    int device;
        ^
kernel/memory.cpp:119:22: style: Variable 'reply.result' is assigned a value that is never used. [unreadVariable]
        reply.result = r;
                     ^
kernel/mpx64.cpp:3:0: information: Include file: "../include/defs.h" not found. [missingInclude]
#include "../include/defs.h"
^
kernel/net_driver.cpp:8:0: information: Include file: <arpa/inet.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <arpa/inet.h>
^
kernel/net_driver.cpp:9:0: information: Include file: <ifaddrs.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ifaddrs.h>
^
kernel/net_driver.cpp:10:0: information: Include file: <net/if.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <net/if.h>
^
kernel/net_driver.cpp:11:0: information: Include file: <netdb.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <netdb.h>
^
kernel/net_driver.cpp:12:0: information: Include file: <netpacket/packet.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <netpacket/packet.h>
^
kernel/net_driver.cpp:13:0: information: Include file: <sys/socket.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sys/socket.h>
^
kernel/net_driver.cpp:14:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
kernel/net_driver.cpp:16:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
kernel/net_driver.cpp:17:0: information: Include file: <atomic> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <atomic>
^
kernel/net_driver.cpp:18:0: information: Include file: <cerrno> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cerrno>
^
kernel/net_driver.cpp:19:0: information: Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdlib>
^
kernel/net_driver.cpp:20:0: information: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring>
^
kernel/net_driver.cpp:21:0: information: Include file: <deque> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <deque>
^
kernel/net_driver.cpp:22:0: information: Include file: <filesystem> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <filesystem>
^
kernel/net_driver.cpp:23:0: information: Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <fstream>
^
kernel/net_driver.cpp:24:0: information: Include file: <mutex> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <mutex>
^
kernel/net_driver.cpp:25:0: information: Include file: <span> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <span>
^
kernel/net_driver.cpp:26:0: information: Include file: <system_error> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <system_error>
^
kernel/net_driver.cpp:27:0: information: Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <thread>
^
kernel/net_driver.cpp:28:0: information: Include file: <unordered_map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unordered_map>
^
kernel/net_driver.cpp:29:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
kernel/net_driver.hpp:2:617: error: Unmatched '}'. Configuration: ''. [syntaxError]
/**

kernel/paging.cpp:1:0: information: Include file: "../../include/paging.hpp" not found. [missingInclude]
#include "../../include/paging.hpp" // Corrected path and extension
^
kernel/paging.cpp:4:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>                  // For uint64_t
^
kernel/paging.cpp:5:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>                  // For std::size_t, nullptr
^
kernel/paging.cpp:6:0: information: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring>                  // For memset
^
kernel/pqcrypto.cpp:9:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
kernel/pqcrypto.cpp:10:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
kernel/pqcrypto.cpp:11:0: information: Include file: <span> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <span>
^
kernel/printer.cpp:32:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef> // For std::size_t
^
kernel/printer.cpp:33:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint> // For uint64_t
^
kernel/printer.cpp:97:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i, j, r, value;
        ^
kernel/printer.cpp:97:12: style: The scope of the variable 'j' can be reduced. [variableScope]
    int i, j, r, value;
           ^
kernel/printer.cpp:152:9: warning: Uninitialized variable: value [uninitvar]
    if (value == BUSY_STATUS)
        ^
kernel/printer.cpp:119:11: note: Assuming condition is false
    if (r == OK) {
          ^
kernel/printer.cpp:152:9: note: Uninitialized variable: value
    if (value == BUSY_STATUS)
        ^
kernel/printer.cpp:284:48: warning: Uninitialized variable: value [uninitvar]
    rep_status(int_mess) = (pcount == 0 ? OK : value);
                                               ^
kernel/printer.cpp:259:19: note: Assuming condition is false
    while (pcount > 0) {                // pcount is std::size_t
                  ^
kernel/printer.cpp:284:48: note: Uninitialized variable: value
    rep_status(int_mess) = (pcount == 0 ? OK : value);
                                               ^
kernel/proc.cpp:25:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef> // For std::size_t, nullptr
^
kernel/proc.cpp:26:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint> // For uint64_t
^
kernel/proc.cpp:43:0: error: #endif without #if [preprocessorErrorDirective]
#endif
^
kernel/proc.cpp:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
kernel/service.hpp:8:0: information: Include file: <atomic> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <atomic>
^
kernel/service.hpp:9:0: information: Include file: <ranges> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ranges>
^
kernel/service.hpp:10:0: information: Include file: <string_view> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string_view>
^
kernel/service.hpp:11:0: information: Include file: <unordered_map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unordered_map>
^
kernel/service.hpp:12:0: information: Include file: <unordered_set> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unordered_set>
^
kernel/service.hpp:13:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
kernel/service.cpp:4:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
kernel/service.cpp:5:0: information: Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <fstream>
^
kernel/service.cpp:6:0: information: Include file: <nlohmann/json.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <nlohmann/json.hpp>
^
kernel/service.cpp:7:0: information: Include file: <ranges> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ranges>
^
kernel/service.cpp:143:28: style: Local variable 'info' shadows outer variable [shadowVariable]
    for (auto &[other_pid, info] : services_) {
                           ^
kernel/service.cpp:138:11: note: Shadowed declaration
    auto &info = it->second;
          ^
kernel/service.cpp:143:28: note: Shadow variable
    for (auto &[other_pid, info] : services_) {
                           ^
kernel/service.cpp:30:45: style: Consider using std::any_of algorithm instead of a raw loop. [useStlAlgorithm]
        if (has_path(dep, target, visited)) {
                                            ^
kernel/syscall.cpp:1:0: information: Include file: "../include/defs.h" not found. [missingInclude]
#include "../include/defs.h"
^
kernel/system.cpp:67:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef> // For std::size_t, nullptr
^
kernel/system.cpp:68:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
kernel/system.cpp:69:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint> // For uint64_t, uintptr_t
^
kernel/table.cpp:34:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef> // For nullptr
^
kernel/tty.cpp:57:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm> // For std::min (used in rd_chars)
^
kernel/tty.cpp:58:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>   // For std::size_t, nullptr
^
kernel/tty.cpp:59:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>   // For uint64_t, uint16_t etc.
^
kernel/tty.cpp:1244:0: error: #endif without #if [preprocessorErrorDirective]
#endif
^
kernel/tty.cpp:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
kernel/wait_graph.cpp:2:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
kernel/wait_graph.cpp:19:42: style: Consider using std::any_of algorithm instead of a raw loop. [useStlAlgorithm]
        if (has_path(next, to, visited)) {
                                         ^
kernel/wini.cpp:29:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm> // For std::min if needed, though not apparent yet
^
kernel/wini.cpp:30:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>   // For std::size_t, nullptr
^
kernel/wini.cpp:31:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>   // For uint64_t, uint16_t etc.
^
kernel/wini.cpp:495:5: error: Found an exit path from function with non-void return type that has missing return statement [missingReturn]
    }
    ^
kernel/wini.cpp:657:25: style: C-style pointer casting [cstyleCast]
    dest->reduced_wr = *(int *)&src[3];
                        ^
kernel/wini.cpp:658:25: style: C-style pointer casting [cstyleCast]
    dest->wr_precomp = *(int *)&src[5];
                        ^
kernel/wini.cpp:670:21: style: The scope of the variable 'offset' can be reduced. [variableScope]
    register int i, offset;
                    ^
kernel/wini.cpp:671:18: style: The scope of the variable 'wn' can be reduced. [variableScope]
    struct wini *wn;
                 ^
kernel/wini.cpp:673:13: style: The scope of the variable 'adjust64' can be reduced. [variableScope]
    int64_t adjust64;  // Was long, for arithmetic with wn_low/wn_size
            ^
kernel/wini.cpp:123:20: style: Local variable 'proc_nr' shadows outer function [shadowFunction]
    int r, caller, proc_nr;
                   ^
h/com.hpp:104:13: note: Shadowed declaration
inline int &proc_nr(message &m) noexcept { return m.m2_i2(); }
            ^
kernel/wini.cpp:123:20: note: Shadow variable
    int r, caller, proc_nr;
                   ^
kernel/wini.cpp:169:12: style: Local variable 'device' shadows outer function [shadowFunction]
    int r, device, errors = 0;
           ^
h/com.hpp:98:13: note: Shadowed declaration
inline int &device(message &m) noexcept { return m.m2_i1(); }
            ^
kernel/wini.cpp:169:12: note: Shadow variable
    int r, device, errors = 0;
           ^
kernel/wini.cpp:581:14: style: Local variable 'address' shadows outer function [shadowFunction]
    uint64_t address; // phys_bytes -> uint64_t
             ^
h/com.hpp:122:15: note: Shadowed declaration
inline char *&address(message &m) noexcept { return m.m2_p1(); }
              ^
kernel/wini.cpp:581:14: note: Shadow variable
    uint64_t address; // phys_bytes -> uint64_t
             ^
kernel/wini.cpp:314:37: style: Parameter 'wn' can be declared as reference to const [constParameterReference]
static int win_results(struct wini &wn) noexcept { // Parameter is struct wini&, noexcept
                                    ^
kernel/wini.cpp:227:38: style: Parameter 'wn' can be declared as pointer to const [constParameterPointer]
static void w_dma_setup(struct wini *wn) noexcept { // Modernized param, noexcept. Renamed wini to
                                     ^
kernel/wini.cpp:220:13: warning: Uninitialized variable: r [uninitvar]
    return (r == OK ? BLOCK_SIZE : ErrorCode::EIO);
            ^
kernel/wini.cpp:202:19: note: Assuming condition is false
    while (errors <= MAX_ERRORS) {
                  ^
kernel/wini.cpp:220:13: note: Uninitialized variable: r
    return (r == OK ? BLOCK_SIZE : ErrorCode::EIO);
            ^
include/psd/vm/semantic_memory.hpp:3:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
include/psd/vm/semantic_memory.hpp:4:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
include/psd/vm/semantic_memory.hpp:5:0: information: Include file: <optional> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <optional>
^
include/psd/vm/semantic_memory.hpp:6:0: information: Include file: <type_traits> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <type_traits>
^
kernel/wormhole.hpp:5:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
kernel/wormhole.hpp:6:0: information: Include file: <atomic> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <atomic>
^
kernel/wormhole.hpp:7:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
kernel/wormhole.hpp:8:0: information: Include file: <optional> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <optional>
^
kernel/wormhole.hpp:9:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
kernel/wormhole.cpp:8:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
kernel/wormhole.cpp:9:0: information: Include file: <atomic> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <atomic> // For std::memory_order_relaxed (used in check)
^
kernel/wormhole.cpp:10:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
kernel/wormhole.cpp:11:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>    // For uint64_t
^
kernel/wormhole.cpp:12:0: information: Include file: <functional> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <functional> // For std::function or function pointers if Transformer were more complex
^
kernel/wormhole.cpp:13:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>     // For std::vector::erase (used in dequeue_receiver)
^
kernel/wormhole.cpp:236:17: style: Return value 'check(true,Precondition::P8,stats)' is always true [knownConditionTrueFalse]
           check(true, Precondition::P8, stats) && // placeholder
                ^
kernel/wormhole.cpp:236:17: note: Calling function 'check' returns 1
           check(true, Precondition::P8, stats) && // placeholder
                ^
kernel/wormhole.cpp:236:17: note: Return value 'check(true,Precondition::P8,stats)' is always true
           check(true, Precondition::P8, stats) && // placeholder
                ^
kernel/xt_wini.cpp:488:5: error: Found an exit path from function with non-void return type that has missing return statement [missingReturn]
    }
    ^
kernel/xt_wini.cpp:671:21: style: The scope of the variable 'offset' can be reduced. [variableScope]
    register int i, offset;
                    ^
kernel/xt_wini.cpp:672:18: style: The scope of the variable 'wn' can be reduced. [variableScope]
    struct wini *wn;
                 ^
kernel/xt_wini.cpp:675:13: style: The scope of the variable 'adjust64' can be reduced. [variableScope]
    int64_t adjust64;
            ^
kernel/xt_wini.cpp:120:20: style: Local variable 'proc_nr' shadows outer function [shadowFunction]
    int r, caller, proc_nr;
                   ^
h/com.hpp:104:13: note: Shadowed declaration
inline int &proc_nr(message &m) noexcept { return m.m2_i2(); }
            ^
kernel/xt_wini.cpp:120:20: note: Shadow variable
    int r, caller, proc_nr;
                   ^
kernel/xt_wini.cpp:165:12: style: Local variable 'device' shadows outer function [shadowFunction]
    int r, device, errors = 0;
           ^
h/com.hpp:98:13: note: Shadowed declaration
inline int &device(message &m) noexcept { return m.m2_i1(); }
            ^
kernel/xt_wini.cpp:165:12: note: Shadow variable
    int r, device, errors = 0;
           ^
kernel/xt_wini.cpp:574:14: style: Local variable 'address' shadows outer function [shadowFunction]
    uint64_t address; // phys_bytes -> uint64_t
             ^
h/com.hpp:122:15: note: Shadowed declaration
inline char *&address(message &m) noexcept { return m.m2_p1(); }
              ^
kernel/xt_wini.cpp:574:14: note: Shadow variable
    uint64_t address; // phys_bytes -> uint64_t
             ^
kernel/xt_wini.cpp:223:38: style: Parameter 'wn' can be declared as reference to const [constParameterReference]
static void w_dma_setup(struct wini &wn) noexcept { // Parameter is struct wini&, added noexcept
                                     ^
kernel/xt_wini.cpp:217:13: warning: Uninitialized variable: r [uninitvar]
    return (r == OK ? BLOCK_SIZE : ErrorCode::EIO);
            ^
kernel/xt_wini.cpp:199:19: note: Assuming condition is false
    while (errors <= MAX_ERRORS) {
                  ^
kernel/xt_wini.cpp:217:13: note: Uninitialized variable: r
    return (r == OK ? BLOCK_SIZE : ErrorCode::EIO);
            ^
lib/abort.cpp:6:0: information: Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdlib.h>
^
lib/abs.cpp:6:0: information: Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdlib.h>
^
include/number_parse.hpp:3:0: information: Include file: <cctype> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cctype> // for std::isspace
^
lib/atol.cpp:15:41: style: Parameter 's' can be declared as pointer to const [constParameterPointer]
[[nodiscard]] constexpr long atol(char *s) noexcept { return parse_signed_decimal(s); }
                                        ^
lib/bcopy.cpp:2:18: style: Parameter 'src' can be declared as pointer to const [constParameterPointer]
void bcopy(char *src, char *dest, int n) {
                 ^
lib/brk2.cpp:10:10: style: C-style pointer casting [cstyleCast]
    p1 = (char *)get_size();
         ^
lib/brk2.cpp:11:35: error: Uninitialized variable: p2 [uninitvar]
    callm1(MM, BRK2, 0, 0, 0, p1, p2, NIL_PTR);
                                  ^
include/stdio.hpp:2:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>  // For std::size_t, nullptr
^
include/stdio.hpp:3:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h> // For read, write, ssize_t
^
lib/cleanup.cpp:2:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
lib/crt0.cpp:5:0: information: Include file: <stddef.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stddef.h>
^
lib/crtso.cpp:2:0: information: Include file: <stddef.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stddef.h>
^
lib/crypt.cpp:1:0: information: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring>
^
lib/crypt.cpp:17:47: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
            bits[i + j * 8] = (*pw & (1 << j) ? 1 : 0);
                                              ^
lib/crypt.cpp:18:54: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
        bits[i + 56] = (salt[i / 4] & (1 << (i % 4)) ? 1 : 0);
                                                     ^
lib/doprintf.cpp:1:0: information: Include file: "../include/stdio.h" not found. [missingInclude]
#include "../include/stdio.h"
^
lib/doprintf.cpp:2:0: information: Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string.h>
^
include/shared/number_to_ascii.hpp:3:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>
^
lib/doprintf.cpp:67:10: style: C-style pointer casting [cstyleCast]
    vl = (char *)args;
         ^
lib/doprintf.cpp:106:23: style: C-style pointer casting [cstyleCast]
            l = (long)GET_ARG(vl, int);
                      ^
lib/doprintf.cpp:110:23: style: C-style pointer casting [cstyleCast]
            l = (long)GET_ARG(vl, int);
                      ^
lib/doprintf.cpp:115:23: style: C-style pointer casting [cstyleCast]
            l = (long)GET_ARG(vl, int);
                      ^
lib/doprintf.cpp:121:23: style: C-style pointer casting [cstyleCast]
            l = (long)GET_ARG(vl, int);
                      ^
lib/doprintf.cpp:127:23: style: C-style pointer casting [cstyleCast]
            l = (long)GET_ARG(vl, long);
                      ^
lib/doprintf.cpp:131:23: style: C-style pointer casting [cstyleCast]
            l = (long)GET_ARG(vl, long);
                      ^
lib/doprintf.cpp:135:23: style: C-style pointer casting [cstyleCast]
            l = (long)GET_ARG(vl, long);
                      ^
lib/doprintf.cpp:139:23: style: C-style pointer casting [cstyleCast]
            c = (char)GET_ARG(vl, int);
                      ^
lib/doprintf.cpp:145:17: style: C-style pointer casting [cstyleCast]
            s = GET_ARG(vl, char *);
                ^
include/shared/number_to_ascii.hpp:10:19: style: Local variable 'kMaxDigits' shadows outer variable [shadowVariable]
    constexpr int kMaxDigits = 12;
                  ^
lib/doprintf.cpp:10:22: note: Shadowed declaration
inline constexpr int kMaxDigits = 12;
                     ^
include/shared/number_to_ascii.hpp:10:19: note: Shadow variable
    constexpr int kMaxDigits = 12;
                  ^
lib/doprintf.cpp:162:28: style: Parameter 'str' can be declared as pointer to const [constParameterPointer]
static void _printit(char *str, int w1, int w2, char padchar, int length, FILE *file) {
                           ^
lib/exec.cpp:46:10: style: C-style pointer casting [cstyleCast]
    ap = (char **)stack;
         ^
lib/exec.cpp:47:13: style: C-style pointer casting [cstyleCast]
    *ap++ = (char *)nargs;
            ^
lib/exec.cpp:52:17: style: C-style pointer casting [cstyleCast]
        *ap++ = (char *)offset;
                ^
lib/exec.cpp:66:17: style: C-style pointer casting [cstyleCast]
        *ap++ = (char *)offset;
                ^
lib/exec.cpp:28:42: style: Variable 'p' can be declared as pointer to const [constVariablePointer]
    char **argorg, **envorg, *hp, **ap, *p;
                                         ^
lib/fclose.cpp:3:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
lib/fopen.cpp:3:0: information: Include file: <fcntl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <fcntl.h>
^
lib/fopen.cpp:22:26: warning: Either the condition 'i>=NFILES' is redundant or the array '_io_table[20]' is accessed at index 20, which is out of bounds. [arrayIndexOutOfBoundsCond]
    for (i = 0; _io_table[i] != 0; i++) {
                         ^
lib/fopen.cpp:23:15: note: Assuming that condition 'i>=NFILES' is not redundant
        if (i >= NFILES)
              ^
lib/fopen.cpp:22:36: note: i is incremented', new value is 20
    for (i = 0; _io_table[i] != 0; i++) {
                                   ^
lib/fopen.cpp:22:26: note: Array index out of bounds
    for (i = 0; _io_table[i] != 0; i++) {
                         ^
lib/fopen.cpp:60:11: style: C-style pointer casting [cstyleCast]
    fp = (FILE *)safe_malloc(sizeof(FILE));
          ^
lib/fork.cpp:2:0: information: Include file: <sys/types.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sys/types.h>        // For pid_t (standard location)
^
lib/fprintf.cpp:2:0: information: Include file: <cstdarg> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdarg>  // va_list handling
^
lib/fprintf.cpp:3:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>   // dynamic buffer
^
lib/fputs.cpp:12:32: style: inconclusive: Function 'fputs' argument 2 names different: declaration 'stream' definition 'file'. [funcArgNamesDifferent]
int fputs(const char *s, FILE *file) {
                               ^
include/stdio.hpp:50:43: note: Function 'fputs' argument 2 names different: declaration 'stream' definition 'file'.
extern "C" int fputs(const char *s, FILE *stream);
                                          ^
lib/fputs.cpp:12:32: note: Function 'fputs' argument 2 names different: declaration 'stream' definition 'file'.
int fputs(const char *s, FILE *file) {
                               ^
lib/fseek.cpp:2:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
lib/ftell.cpp:2:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
lib/getenv.cpp:2:0: information: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring>
^
lib/getgrent.cpp:8:0: information: Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdlib>            // atoi
^
lib/getgrent.cpp:9:0: information: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring>            // strcmp
^
lib/getgrent.cpp:10:0: information: Include file: <fcntl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <fcntl.h>            // open
^
lib/getgrent.cpp:11:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>           // lseek, read, close
^
lib/getgrent.cpp:97:30: style: Parameter 'name' can be declared as pointer to const [constParameterPointer]
struct group *getgrnam(char *name) {
                             ^
lib/getpass.cpp:3:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
lib/getpwent.cpp:7:0: information: Include file: <fcntl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <fcntl.h>
^
lib/getpwent.cpp:8:0: information: Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdlib.h>
^
lib/getpwent.cpp:9:0: information: Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string.h>
^
lib/getpwent.cpp:10:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
lib/getpwent.cpp:100:20: style: Local variable 'pwd' shadows outer variable [shadowVariable]
    struct passwd *pwd;
                   ^
lib/getpwent.cpp:22:22: note: Shadowed declaration
static struct passwd pwd;
                     ^
lib/getpwent.cpp:100:20: note: Shadow variable
    struct passwd *pwd;
                   ^
lib/getpwent.cpp:114:20: style: Local variable 'pwd' shadows outer variable [shadowVariable]
    struct passwd *pwd;
                   ^
lib/getpwent.cpp:22:22: note: Shadowed declaration
static struct passwd pwd;
                     ^
lib/getpwent.cpp:114:20: note: Shadow variable
    struct passwd *pwd;
                   ^
lib/head.cpp:2:0: information: Include file: <stddef.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stddef.h>
^
lib/index.cpp:1:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>
^
lib/io/src/file_operations.cpp:1:0: information: Include file: "minix/io/file_operations.hpp" not found. [missingInclude]
#include "minix/io/file_operations.hpp"
^
lib/io/src/file_operations.cpp:2:0: information: Include file: "minix/io/file_stream.hpp" not found. [missingInclude]
#include "minix/io/file_stream.hpp"
^
lib/io/src/file_operations.cpp:3:0: information: Include file: "minix/io/standard_streams.hpp" not found. [missingInclude]
#include "minix/io/standard_streams.hpp"
^
lib/io/src/file_operations.cpp:5:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
lib/io/src/file_operations.cpp:6:0: information: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring>
^
lib/io/src/file_operations.cpp:7:0: information: Include file: <fcntl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <fcntl.h>
^
lib/io/src/file_operations.cpp:8:0: information: Include file: <optional> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <optional>
^
lib/io/src/file_operations.cpp:9:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
lib/io/src/file_stream.cpp:1:0: information: Include file: "minix/io/file_stream.hpp" not found. [missingInclude]
#include "minix/io/file_stream.hpp"
^
lib/io/src/file_stream.cpp:3:0: information: Include file: <cerrno> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cerrno>
^
lib/io/src/file_stream.cpp:4:0: information: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring>
^
lib/io/src/file_stream.cpp:5:0: information: Include file: <expected> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <expected> // For std::unexpected
^
lib/io/src/file_stream.cpp:6:0: information: Include file: <fcntl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <fcntl.h>
^
lib/io/src/file_stream.cpp:7:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
lib/io/src/memory_stream.cpp:1:0: information: Include file: "minix/io/memory_stream.hpp" not found. [missingInclude]
#include "minix/io/memory_stream.hpp"
^
lib/io/src/memory_stream.cpp:3:0: information: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring>
^
lib/io/src/standard_streams.cpp:1:0: information: Include file: "minix/io/standard_streams.hpp" not found. [missingInclude]
#include "minix/io/standard_streams.hpp"
^
lib/io/src/standard_streams.cpp:2:0: information: Include file: "minix/io/file_stream.hpp" not found. [missingInclude]
#include "minix/io/file_stream.hpp"
^
lib/io/src/standard_streams.cpp:4:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
lib/io/src/stdio_compat.cpp:1:0: information: Include file: <cstdarg> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdarg>
^
lib/io/src/stdio_compat.cpp:2:0: information: Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdio>
^
lib/io/src/stdio_compat.cpp:3:0: information: Include file: <cerrno> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cerrno>
^
lib/io/src/stdio_compat.cpp:4:0: information: Include file: <expected> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <expected>
^
lib/io/src/stdio_compat.cpp:5:0: information: Include file: <mutex> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <mutex>
^
lib/io/src/stdio_compat.cpp:6:0: information: Include file: <span> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <span>
^
lib/io/src/stdio_compat.cpp:7:0: information: Include file: <system_error> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <system_error>
^
lib/io/src/stdio_compat.cpp:8:0: information: Include file: <unordered_map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unordered_map>
^
lib/io/src/stdio_compat.cpp:9:0: information: Include file: "minix/io/file_stream.hpp" not found. [missingInclude]
#include "minix/io/file_stream.hpp"
^
lib/io/src/stdio_compat.cpp:10:0: information: Include file: "minix/io/standard_streams.hpp" not found. [missingInclude]
#include "minix/io/standard_streams.hpp"
^
lib/io/src/stdio_compat.cpp:11:0: information: Include file: "minix/io/file_operations.hpp" not found. [missingInclude]
#include "minix/io/file_operations.hpp"
^
lib/io/src/stdio_compat.cpp:12:0: information: Include file: "minix/io/stdio_compat.hpp" not found. [missingInclude]
#include "minix/io/stdio_compat.hpp"
^
lib/io/src/stdio_compat.cpp:54:39: style: The scope of the variable 'append' can be reduced. [variableScope]
    bool read = false, write = false, append = false;
                                      ^
lib/isatty.cpp:1:0: information: Include file: "../include/stat.h" not found. [missingInclude]
#include "../include/stat.h"
^
lib/itoa.cpp:9:16: style: The scope of the variable 'r' can be reduced. [variableScope]
  register int r, k;
               ^
lib/itoa.cpp:9:19: style: The scope of the variable 'k' can be reduced. [variableScope]
  register int r, k;
                  ^
lib/itoa.cpp:10:7: style: The scope of the variable 'flag' can be reduced. [variableScope]
  int flag = 0;
      ^
lib/malloc.cpp:42:19: error: Syntax Error: AST broken, 'while' doesn't have two operands. [internalAstError]
            while ((new = NEXT(next)) != 0 && !((vir_bytes) new &BUSY))
                  ^
lib/minix/crtso.cpp:2:0: information: Include file: <stddef.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stddef.h>
^
lib/minix/head.cpp:2:0: information: Include file: <stddef.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stddef.h>
^
include/setjmp.hpp:17:0: information: Include file: <csetjmp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <csetjmp>
^
lib/minix/setjmp.cpp:2:0: information: Include file: "../../include/lib.h" not found. [missingInclude]
#include "../../include/lib.h"
^
lib/minix/setjmp.cpp:3:0: information: Include file: <csetjmp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <csetjmp>
^
lib/mktemp.cpp:6:12: style: Unused variable: k [unusedVariable]
  int pid, k;
           ^
lib/perror.cpp:4:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
lib/perror.cpp:142:1: error: Unmatched '}'. Configuration: '__GNUC__;__clang__'. [syntaxError]
}
^
lib/printk.cpp:19:12: style: C-style pointer casting [cstyleCast]
    valp = (int *)&arglist;
           ^
lib/printk.cpp:33:14: style: C-style pointer casting [cstyleCast]
        lp = (long *)valp;
             ^
lib/printk.cpp:56:20: style: C-style pointer casting [cstyleCast]
            valp = (int *)lp;
                   ^
lib/printk.cpp:61:20: style: C-style pointer casting [cstyleCast]
            valp = (int *)lp;
                   ^
lib/printk.cpp:66:20: style: C-style pointer casting [cstyleCast]
            valp = (int *)lp;
                   ^
lib/printk.cpp:17:29: style: Variable 'p1' can be declared as pointer to const [constVariablePointer]
    char a[MAXDIGITS], *p, *p1, c;
                            ^
lib/prints.cpp:8:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h> // write system call
^
lib/prints.cpp:23:12: style: C-style pointer casting [cstyleCast]
    valp = (int *)&arglist;
           ^
lib/prints.cpp:20:15: style: Variable 'p1' can be declared as pointer to const [constVariablePointer]
    char *p, *p1, c;
              ^
lib/prints.cpp:19:12: style: Unused variable: r [unusedVariable]
    int k, r, *valp;
           ^
lib/putc.cpp:1:0: information: Include file: "../include/stdio.h" not found. [missingInclude]
#include "../include/stdio.h"
^
lib/putc.cpp:4:1: error: syntax error [syntaxError]
putc(ch, iop)
^
lib/read.cpp:2:0: information: Include file: <stddef.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stddef.h>           // For size_t
^
lib/read.cpp:3:0: information: Include file: <sys/types.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sys/types.h>        // For ssize_t
^
lib/regexp.cpp:32:0: information: Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string.h>
^
lib/regexp.cpp:33:0: information: Include file: <strings.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <strings.h>
^
lib/regexp.cpp:221:9: style: C-style pointer casting [cstyleCast]
    r = (regexp *)safe_malloc(sizeof(regexp) + (unsigned)regsize);
        ^
lib/regexp.cpp:487:29: style: C-style pointer casting [cstyleCast]
                    class = UCHARAT(regparse - 2) + 1;
                            ^
lib/regexp.cpp:488:32: style: C-style pointer casting [cstyleCast]
                    classend = UCHARAT(regparse);
                               ^
lib/regexp.cpp:699:9: style: C-style pointer casting [cstyleCast]
    if (UCHARAT(prog->program) != MAGIC) {
        ^
lib/regexp.cpp:201:18: style: The scope of the variable 'len' can be reduced. [variableScope]
    register int len;
                 ^
lib/regexp.cpp:201:18: style: Local variable 'len' shadows outer function [shadowFunction]
    register int len;
                 ^
include/lib.hpp:36:24: note: Shadowed declaration
extern "C" std::size_t len(const char *s) noexcept; // return int -> std::size_t, s -> const char*
                       ^
lib/regexp.cpp:201:18: note: Shadow variable
    register int len;
                 ^
lib/regexp.cpp:529:22: style: Local variable 'len' shadows outer function [shadowFunction]
        register int len;
                     ^
include/lib.hpp:36:24: note: Shadowed declaration
extern "C" std::size_t len(const char *s) noexcept; // return int -> std::size_t, s -> const char*
                       ^
lib/regexp.cpp:529:22: note: Shadow variable
        register int len;
                     ^
lib/regexp.cpp:820:26: style: Local variable 'len' shadows outer function [shadowFunction]
            register int len;
                         ^
include/lib.hpp:36:24: note: Shadowed declaration
extern "C" std::size_t len(const char *s) noexcept; // return int -> std::size_t, s -> const char*
                       ^
lib/regexp.cpp:820:26: note: Shadow variable
            register int len;
                         ^
lib/regexp.cpp:922:26: style: Local variable 'min' shadows outer function [shadowFunction]
            register int min;
                         ^
h/type.hpp:22:35: note: Shadowed declaration
template <typename T> constexpr T min(T a, T b) noexcept { return a < b ? a : b; }
                                  ^
lib/regexp.cpp:922:26: note: Shadow variable
            register int min;
                         ^
lib/regexp.cpp:623:7: style: Parameter 'val' can be declared as pointer to const [constParameterPointer]
char *val;
      ^
lib/regexp.cpp:821:28: style: Variable 'opnd' can be declared as pointer to const [constVariablePointer]
            register char *opnd;
                           ^
lib/regsub.cpp:50:9: style: C-style pointer casting [cstyleCast]
    if (UCHARAT(prog->program) != MAGIC) {
        ^
include/regexp.hpp:16:18: error: syntax error: 1 = [syntaxError]
inline constexpr int CHARBITS = 0377;
                 ^
lib/safe_alloc.cpp:2:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
lib/safe_alloc.cpp:3:0: information: Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdlib.h>
^
lib/scanf.cpp:1:0: information: Include file: <stdarg.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdarg.h>
^
lib/scanf.cpp:2:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
lib/sendrec.cpp:4:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
lib/setbuf.cpp:4:1: error: syntax error [syntaxError]
setbuf(iop, buffer) FILE *iop;
^
lib/setjmp.cpp:3:0: information: Include file: <csetjmp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <csetjmp>
^
lib/sprintf.cpp:1:0: information: Include file: "../include/stdio.h" not found. [missingInclude]
#include "../include/stdio.h"
^
lib/stb.cpp:3:5: error: syntax error [syntaxError]
    __stb(n, f, t)
    ^
lib/stderr.cpp:1:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h> // write system call
^
lib/stime.cpp:4:17: style: Parameter 'top' can be declared as pointer to const [constParameterPointer]
int stime(long *top) {
                ^
lib/strcat.cpp:2:21: style: Parameter 's2' can be declared as pointer to const [constParameterPointer]
register char *s1, *s2;
                    ^
lib/strcmp.cpp:4:0: information: Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string.h>
^
lib/strlen.cpp:3:0: information: Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string.h>
^
lib/strncat.cpp:2:21: style: Parameter 's2' can be declared as pointer to const [constParameterPointer]
register char *s1, *s2;
                    ^
lib/strncpy.cpp:2:21: style: Parameter 's2' can be declared as pointer to const [constParameterPointer]
register char *s1, *s2;
                    ^
lib/syslib.cpp:8:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
lib/ungetc.cpp:1:0: information: Include file: "../include/stdio.h" not found. [missingInclude]
#include "../include/stdio.h"
^
lib/ungetc.cpp:3:1: error: syntax error [syntaxError]
ungetc(ch, iop)
^
lib/utime.cpp:4:34: style: Parameter 'timp' can be declared as const array [constParameter]
int utime(const char *name, long timp[2]) {
                                 ^
lib/write.cpp:2:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
mm/const.hpp:4:0: information: Include file: "../../h/const.hpp" not found. [missingInclude]
#include "../../h/const.hpp" // For MAX_PATH, MAX_ISTACK_BYTES
^
mm/const.hpp:5:0: information: Include file: "../../h/type.hpp" not found. [missingInclude]
#include "../../h/type.hpp"  // For phys_clicks
^
mm/const.hpp:6:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>           // For std::size_t
^
mm/alloc.cpp:14:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>       // For nullptr
^
mm/alloc.cpp:15:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>       // For explicit uint64_t usage
^
mm/alloc.cpp:16:0: information: Include file: <iterator> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iterator>      // For std::begin/std::end
^
mm/alloc.cpp:17:0: information: Include file: <list> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <list>          // For std::list
^
mm/alloc.cpp:95:14: style: Local variable 'max' shadows outer function [shadowFunction]
    uint64_t max = 0;
             ^
h/type.hpp:17:35: note: Shadowed declaration
template <typename T> constexpr T max(T a, T b) noexcept { return a > b ? a : b; }
                                  ^
mm/alloc.cpp:95:14: note: Shadow variable
    uint64_t max = 0;
             ^
mm/alloc.cpp:40:32: style: Consider using std::find_if algorithm instead of a raw loop. [useStlAlgorithm]
        if (it->len >= clicks) {
                               ^
mm/alloc.cpp:98:17: style: Consider using std::any_of, std::all_of, std::none_of algorithm instead of a raw loop. [useStlAlgorithm]
            max = h.len;
                ^
mm/mproc.hpp:13:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>       // For std::size_t if not via type.hpp
^
mm/mproc.hpp:14:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>       // For explicit use of uint16_t, uint8_t if not via type.hpp
^
mm/break.cpp:27:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef> // For std::size_t
^
mm/break.cpp:28:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint> // For int64_t
^
mm/exec.cpp:18:0: information: Include file: "../h/stat.h" not found. [missingInclude]
#include "../h/stat.h"
^
mm/alloc.hpp:7:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
mm/token.hpp:7:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
mm/token.hpp:8:0: information: Include file: <random> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <random>
^
mm/exec.cpp:26:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm> // For std::min (if min is not a macro)
^
mm/exec.cpp:27:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>   // For std::size_t
^
mm/exec.cpp:28:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>   // For uint64_t, int64_t
^
mm/exec.cpp:216:46: error: Array 'buf[4]' accessed at index 4, which is out of bounds. [arrayIndexOutOfBounds]
    *bss_bytes = static_cast<std::size_t>(buf[BSSB]); /* bss size in bytes */
                                             ^
mm/exec.cpp:217:43: error: Array 'buf[4]' accessed at index 6, which is out of bounds. [arrayIndexOutOfBounds]
    *tot_bytes = static_cast<uint64_t>(buf[TOTB]);    /* total bytes to allocate for program */
                                          ^
mm/exec.cpp:148:14: style: C-style pointer casting [cstyleCast]
    new_sp = (char *)vsp;
             ^
mm/exec.cpp:393:10: style: C-style pointer casting [cstyleCast]
    ap = (char **)stack; /* points initially to 'nargs' */
         ^
mm/exec.cpp:396:19: style: C-style pointer casting [cstyleCast]
        if (ap >= (char **)&stack[MAX_ISTACK_BYTES])
                  ^
mm/exec.cpp:277:27: style: The scope of the variable 'count' can be reduced. [variableScope]
    uint64_t bytes, base, count, bss_offset;            // phys_bytes -> uint64_t
                          ^
mm/forkexit.cpp:26:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef> // For std::size_t
^
mm/forkexit.cpp:27:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint> // For uint64_t
^
mm/forkexit.cpp:146:8: error: syntax error [syntaxError]
PUBLIC mm_exit(rmp, exit_status)
       ^
mm/getset.cpp:19:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef> // For std::size_t (not directly used but good include)
^
mm/getset.cpp:20:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint> // For uint16_t, uint8_t
^
mm/main.cpp:20:0: information: Include file: "../include/vm.h" not found. [missingInclude]
#include "../include/vm.h"
^
mm/main.cpp:26:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef> // For std::size_t, uintptr_t
^
mm/main.cpp:27:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint> // For uint64_t, int64_t
^
mm/main.cpp:28:0: information: Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdio>  // For printf (used in do_brk2)
^
mm/main.cpp:200:5: warning: Return value of function alloc_mem() is not used. [ignoredReturnValue]
    alloc_mem(tot_clicks);              /* remove RAM disk from map (alloc_mem takes uint64_t) */
    ^
mm/main.cpp:72:13: style: Condition 'dont_reply' is always false [knownConditionTrueFalse]
        if (dont_reply)
            ^
mm/main.cpp:62:22: note: Assignment 'dont_reply=FALSE', assigned value is 0
        dont_reply = FALSE;
                     ^
mm/main.cpp:72:13: note: Condition 'dont_reply' is always false
        if (dont_reply)
            ^
mm/main.cpp:67:19: style: Variable 'error' is reassigned a value before the old one has been used. [redundantAssignment]
            error = ErrorCode::E_BAD_CALL;
                  ^
mm/main.cpp:61:15: note: error is assigned
        error = OK;
              ^
mm/main.cpp:67:19: note: error is overwritten
            error = ErrorCode::E_BAD_CALL;
                  ^
mm/main.cpp:50:9: style: The scope of the variable 'error' can be reduced. [variableScope]
    int error;
        ^
mm/main.cpp:115:28: style: Variable 'proc_ptr' can be declared as pointer to const [constVariablePointer]
    register struct mproc *proc_ptr;
                           ^
mm/paging.cpp:1:0: information: Include file: "../include/paging.h" not found. [missingInclude]
#include "../include/paging.h"
^
mm/putc.cpp:20:8: error: syntax error [syntaxError]
PUBLIC putc(c)
       ^
mm/signal.cpp:23:0: information: Include file: "../h/stat.h" not found. [missingInclude]
#include "../h/stat.h"
^
mm/signal.cpp:30:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm> // For std::min
^
mm/signal.cpp:31:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>   // For std::size_t, nullptr
^
mm/signal.cpp:32:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>   // For uint16_t, int64_t etc.
^
mm/table.cpp:16:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>   // For uint16_t
^
mm/table.cpp:17:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>   // For nullptr
^
mm/utility.cpp:13:0: information: Include file: "../h/stat.h" not found. [missingInclude]
#include "../h/stat.h"
^
mm/utility.cpp:19:0: information: Include file: <cerrno> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cerrno>     // errno
^
mm/utility.cpp:20:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>    // For std::size_t
^
mm/utility.cpp:21:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>    // For uintptr_t
^
mm/utility.cpp:22:0: information: Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdio>     // printf
^
mm/utility.cpp:23:0: information: Include file: <filesystem> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <filesystem> // std::filesystem utilities
^
mm/utility.cpp:24:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>     // std::unique_ptr
^
include/paging.hpp:12:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef> // for std::size_t
^
include/vm.hpp:12:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
mm/vm.cpp:4:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
pmm.cpp:3:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
pmm.cpp:4:0: information: Include file: <stddef.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stddef.h> // For NULL, size_t
^
pmm.cpp:123:61: style: Condition 'entry[i].len<bitmap_size_bytes' is always false [knownConditionTrueFalse]
                if (potential_addr < 0x1000 && entry[i].len < bitmap_size_bytes) continue; // Skip very low memory unless large enough
                                                            ^
pmm.cpp:120:77: note: Assuming condition 'entry[i].len>=bitmap_size_bytes' is true
            if (entry[i].type == MULTIBOOT_MEMORY_AVAILABLE && entry[i].len >= bitmap_size_bytes) {
                                                                            ^
pmm.cpp:123:61: note: Condition 'entry[i].len<bitmap_size_bytes' is always false
                if (potential_addr < 0x1000 && entry[i].len < bitmap_size_bytes) continue; // Skip very low memory unless large enough
                                                            ^
pmm.cpp:63:73: style: C-style pointer casting [cstyleCast]
    struct multiboot_mmap_entry* entry = (struct multiboot_mmap_entry*)((uint8_t*)mmap_tag + sizeof(struct multiboot_tag_mmap) - sizeof(struct multiboot_mmap_entry) + mmap_tag->entry_size); // Point to first entry
                                                                        ^
pmm.cpp:141:19: style: C-style pointer casting [cstyleCast]
    page_bitmap = (uint32_t*)bitmap_phys_addr; // For now, direct map. VMM will need to map this.
                  ^
pmm.cpp:187:34: style: C-style pointer casting [cstyleCast]
    struct multiboot_tag* tag = (struct multiboot_tag*)(multiboot_info_addr_phys + 8); // First tag after fixed header
                                 ^
pmm.cpp:188:79: style: C-style pointer casting [cstyleCast]
    for (; tag->type != MULTIBOOT_TAG_TYPE_END; tag = (struct multiboot_tag*)((uint8_t*)tag + multiboot_tag_align(tag->size))) {
                                                                              ^
pmm.cpp:191:17: style: Redundant initialization for 'mb_info_end'. The initialized value is overwritten before it is read. [redundantInitialization]
    mb_info_end = (uintptr_t)tag + sizeof(struct multiboot_tag) ; // End of last tag
                ^
pmm.cpp:186:27: note: mb_info_end is initialized
    uintptr_t mb_info_end = multiboot_info_addr_phys + PAGE_SIZE; // Guessing one page for MB info
                          ^
pmm.cpp:191:17: note: mb_info_end is overwritten
    mb_info_end = (uintptr_t)tag + sizeof(struct multiboot_tag) ; // End of last tag
                ^
test/t10a.cpp:1:0: information: Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdlib>
^
test/t11a.cpp:1:0: information: Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdio>
^
test/t11a.cpp:2:0: information: Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdlib>
^
test/t11a.cpp:3:0: information: Include file: <fcntl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <fcntl.h>
^
test/t11a.cpp:4:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
test/t11b.cpp:1:0: information: Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdio>
^
test/t11b.cpp:2:0: information: Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdlib>
^
test/t15a.cpp:1:0: information: Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdlib>
^
test/t16a.cpp:1:0: information: Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdio>
^
test/t16a.cpp:2:0: information: Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdlib>
^
test/t16a.cpp:3:0: information: Include file: <fcntl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <fcntl.h>
^
test/t16a.cpp:4:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
test/t16b.cpp:1:0: information: Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdio>
^
test/t16b.cpp:2:0: information: Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdlib>
^
test/test0.cpp:1:0: information: Include file: "stat.hpp" not found. [missingInclude]
#include "stat.hpp"
^
test/test0.cpp:49:10: style: The scope of the variable 't' can be reduced. [variableScope]
    long t, time(), abuf[4];
         ^
test/test0.cpp:228:15: style: The scope of the variable 'n' can be reduced. [variableScope]
    int i, j, n, n1, flag;
              ^
test/test0.cpp:228:18: style: The scope of the variable 'n1' can be reduced. [variableScope]
    int i, j, n, n1, flag;
                 ^
test/test0.cpp:228:22: style: The scope of the variable 'flag' can be reduced. [variableScope]
    int i, j, n, n1, flag;
                     ^
test/test0.cpp:229:18: style: Local variable 'b' shadows outer variable [shadowVariable]
    char a[255], b[255];
                 ^
test/test0.cpp:43:6: note: Shadowed declaration
char b[4] = {0, 1, 2, 3}, c[4] = {10, 20, 30, 40}, d[4] = {6, 7, 8, 9};
     ^
test/test0.cpp:229:18: note: Shadow variable
    char a[255], b[255];
                 ^
test/test0.cpp:28:10: style: Unused variable: let [unusedVariable]
    char let;
         ^
test/test0.cpp:65:13: style: Variable 'n2' is assigned a value that is never used. [unreadVariable]
    if ((n2 = open("nofile", 0)) != -1)
            ^
test/test0.cpp:90:11: style: Variable 't' is assigned a value that is never used. [unreadVariable]
        t = 105L;
          ^
test/test0.cpp:49:21: style: Unused variable: abuf [unusedVariable]
    long t, time(), abuf[4];
                    ^
test/test0.cpp:331:16: style: Variable 'j' is assigned a value that is never used. [unreadVariable]
        if ((j = read(n1, b, 1024)) != 255)
               ^
test/test1.cpp:1:0: information: Include file: "signal.hpp" not found. [missingInclude]
#include "signal.hpp"
^
test/test1.cpp:17:1: error: syntax error [syntaxError]
main() {
^
test/test10.cpp:16:1: error: syntax error [syntaxError]
main() {
^
test/test11.cpp:14:1: error: syntax error [syntaxError]
main() {
^
test/test12.cpp:7:0: information: Include file: <fcntl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <fcntl.h>
^
test/test12.cpp:8:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
test/test12.cpp:9:0: information: Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdlib.h>
^
test/test12.cpp:10:0: information: Include file: <sys/stat.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sys/stat.h>
^
test/test12.cpp:11:0: information: Include file: <sys/types.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sys/types.h>
^
test/test12.cpp:12:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
test/test2.cpp:13:1: error: syntax error [syntaxError]
main() {
^
test/test3.cpp:1:0: information: Include file: "signal.hpp" not found. [missingInclude]
#include "signal.hpp"
^
test/test3.cpp:51:1: error: syntax error: keyword 'catch' is not allowed in global scope [syntaxError]
catch () {
^
test/test4.cpp:14:1: error: syntax error [syntaxError]
main() {
^
test/test5.cpp:1:0: information: Include file: "errno.hpp" not found. [missingInclude]
#include "errno.hpp"
^
test/test5.cpp:7:0: information: Include file: "signal.hpp" not found. [missingInclude]
#include "signal.hpp"
^
test/test5.cpp:18:1: error: syntax error [syntaxError]
main() {
^
test/test6.cpp:13:1: error: syntax error [syntaxError]
main() {
^
test/test7.cpp:1:0: information: Include file: "signal.hpp" not found. [missingInclude]
#include "signal.hpp"
^
test/test7.cpp:16:1: error: syntax error [syntaxError]
main() {
^
test/test8.cpp:1:0: information: Include file: "stat.hpp" not found. [missingInclude]
#include "stat.hpp"
^
test/test8.cpp:14:1: error: syntax error [syntaxError]
main() {
^
test/test9.cpp:7:0: information: Include file: "setjmp.hpp" not found. [missingInclude]
#include "setjmp.hpp"
^
test/test9.cpp:8:0: information: Include file: "signal.hpp" not found. [missingInclude]
#include "signal.hpp"
^
test/test9.cpp:9:0: information: Include file: "stdio.hpp" not found. [missingInclude]
#include "stdio.hpp"
^
test/test9.cpp:276:1: error: syntax error: keyword 'catch' is not allowed in global scope [syntaxError]
catch () {
^
tests/crypto/test_constant_time_equal.cpp:1:0: information: Include file: "constant_time.hpp" not found. [missingInclude]
#include "constant_time.hpp"
^
tests/crypto/test_constant_time_equal.cpp:3:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
tests/crypto/test_constant_time_equal.cpp:4:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/crypto/test_constant_time_equal.cpp:5:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>
^
tests/crypto/test_constant_time_equal.cpp:6:0: information: Include file: <span> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <span>
^
tests/crypto/test_kyber.cpp:1:0: information: Include file: "kyber.hpp" not found. [missingInclude]
#include "kyber.hpp"
^
tests/crypto/test_kyber.cpp:3:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/crypto/test_kyber.cpp:4:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>
^
tests/crypto/test_kyber.cpp:5:0: information: Include file: <string_view> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string_view>
^
tests/crypto/test_kyber.cpp:6:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
tests/crypto/test_shared_secret_failure.cpp:6:0: information: Include file: "kyber.hpp" not found. [missingInclude]
#include "kyber.hpp"
^
tests/crypto/test_shared_secret_failure.cpp:7:0: information: Include file: "pqcrypto.hpp" not found. [missingInclude]
#include "pqcrypto.hpp"
^
tests/crypto/test_shared_secret_failure.cpp:9:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
tests/crypto/test_shared_secret_failure.cpp:10:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
tests/crypto/test_shared_secret_failure.cpp:11:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/crypto/test_shared_secret_failure.cpp:12:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
tests/crypto/test_shared_secret_failure.cpp:13:0: information: Include file: <random> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <random>
^
tests/randombytes_stub.c:1:0: information: Include file: "randombytes.h" not found. [missingInclude]
#include "randombytes.h"
^
tests/randombytes_stub.c:2:0: information: Include file: <stddef.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stddef.h>
^
tests/randombytes_stub.c:3:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
tests/randombytes_stub.c:4:0: information: Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdlib.h>
^
tests/sodium.h:2:0: information: Include file: <stddef.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stddef.h>
^
tests/sodium.h:3:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
tests/sodium_stub.cpp:2:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>
^
tests/sodium_stub.cpp:3:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
tests/sodium_stub.cpp:4:0: information: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring>
^
tests/sodium_stub.cpp:5:0: information: Include file: <random> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <random>
^
tests/test_fastpath.cpp:3:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_fastpath_cache_performance.cpp:3:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_fastpath_cache_performance.cpp:4:0: information: Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <chrono>
^
tests/test_fastpath_cache_performance.cpp:5:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
tests/test_fastpath_fallback.cpp:3:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_fastpath_preconditions.cpp:8:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
kernel/octonion.hpp:7:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
kernel/octonion.hpp:8:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
kernel/octonion.hpp:9:0: information: Include file: <span> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <span>
^
kernel/fano_octonion.hpp:8:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
kernel/fano_octonion.hpp:9:0: information: Include file: <utility> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <utility>
^
kernel/sedenion.hpp:7:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
kernel/sedenion.hpp:8:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
kernel/sedenion.hpp:9:0: information: Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdlib>
^
kernel/sedenion.hpp:10:0: information: Include file: <span> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <span>
^
kernel/sedenion.hpp:11:0: information: Include file: <utility> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <utility>
^
tests/test_hypercomplex.cpp:4:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
tests/test_hypercomplex.cpp:5:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_hypercomplex.cpp:6:0: information: Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <thread>
^
kernel/octonion.hpp:116:21: style: Consider using std::accumulate algorithm instead of a raw loop. [useStlAlgorithm]
            norm_sq += static_cast<unsigned long long>(v) * static_cast<unsigned long long>(v);
                    ^
kernel/octonion.hpp:123:15: style: Consider using std::transform algorithm instead of a raw loop. [useStlAlgorithm]
            v = static_cast<std::uint32_t>(static_cast<unsigned long long>(v) / norm_sq);
              ^
kernel/sedenion.hpp:95:15: style: Consider using std::accumulate algorithm instead of a raw loop. [useStlAlgorithm]
            n += v * v;
              ^
kernel/sedenion.hpp:120:11: style: Consider using std::fill or std::generate algorithm instead of a raw loop. [useStlAlgorithm]
        v = static_cast<float>(rand()) / RAND_MAX; // demo randomness
          ^
tests/test_lattice.cpp:11:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
tests/test_lattice.cpp:12:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_lattice_blocking.cpp:10:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_lattice_blocking.cpp:11:0: information: Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <chrono>
^
tests/test_lattice_blocking.cpp:12:0: information: Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <thread>
^
tests/test_lattice_ipc.cpp:13:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
tests/test_lattice_ipc.cpp:14:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_lattice_ipc.cpp:15:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>
^
tests/test_lattice_ipc.cpp:16:0: information: Include file: <span> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <span>
^
tests/test_lattice_ipc.cpp:17:0: information: Include file: <string_view> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string_view>
^
tests/test_lattice_ipc.cpp:18:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
tests/test_lattice_ipv6.cpp:11:0: information: Include file: <atomic> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <atomic>
^
tests/test_lattice_ipv6.cpp:12:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_lattice_ipv6.cpp:13:0: information: Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <chrono>
^
tests/test_lattice_ipv6.cpp:14:0: information: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring>
^
tests/test_lattice_ipv6.cpp:15:0: information: Include file: <sys/wait.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sys/wait.h>
^
tests/test_lattice_ipv6.cpp:16:0: information: Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <thread>
^
tests/test_lattice_network.cpp:11:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_lattice_network.cpp:12:0: information: Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <chrono>
^
tests/test_lattice_network.cpp:13:0: information: Include file: <csignal> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <csignal>
^
tests/test_lattice_network.cpp:14:0: information: Include file: <sys/wait.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sys/wait.h>
^
tests/test_lattice_network.cpp:15:0: information: Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <thread>
^
tests/test_lattice_network_encrypted.cpp:11:0: information: Include file: <atomic> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <atomic>
^
tests/test_lattice_network_encrypted.cpp:12:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_lattice_network_encrypted.cpp:13:0: information: Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <chrono>
^
tests/test_lattice_network_encrypted.cpp:14:0: information: Include file: <csignal> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <csignal>
^
tests/test_lattice_network_encrypted.cpp:15:0: information: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring>
^
tests/test_lattice_network_encrypted.cpp:16:0: information: Include file: <sys/wait.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sys/wait.h>
^
tests/test_lattice_network_encrypted.cpp:17:0: information: Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <thread>
^
tests/test_lattice_send_error.cpp:9:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_lattice_send_recv.cpp:14:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_lib.cpp:1:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert> // for assert
^
tests/test_memory_stream.cpp:3:0: information: Include file: "minix/io/memory_stream.hpp" not found. [missingInclude]
#include "minix/io/memory_stream.hpp"
^
tests/test_memory_stream.cpp:5:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
tests/test_memory_stream.cpp:6:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>
^
tests/test_memory_stream.cpp:7:0: information: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring>
^
tests/test_memory_stream.cpp:8:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
tests/test_net_driver.cpp:8:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
tests/test_net_driver.cpp:9:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_net_driver.cpp:10:0: information: Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <chrono>
^
tests/test_net_driver.cpp:11:0: information: Include file: <sys/wait.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sys/wait.h>
^
tests/test_net_driver.cpp:12:0: information: Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <thread>
^
tests/test_net_driver.cpp:13:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
tests/test_net_driver_concurrency.cpp:8:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
tests/test_net_driver_concurrency.cpp:9:0: information: Include file: <atomic> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <atomic>
^
tests/test_net_driver_concurrency.cpp:10:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_net_driver_concurrency.cpp:11:0: information: Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <chrono>
^
tests/test_net_driver_concurrency.cpp:12:0: information: Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <thread>
^
tests/test_net_driver_concurrency.cpp:13:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
tests/test_net_driver_drop_newest.cpp:8:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_net_driver_drop_newest.cpp:9:0: information: Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <chrono>
^
tests/test_net_driver_drop_newest.cpp:10:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
tests/test_net_driver_drop_newest.cpp:11:0: information: Include file: <sys/wait.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sys/wait.h>
^
tests/test_net_driver_drop_newest.cpp:12:0: information: Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <thread>
^
tests/test_net_driver_drop_newest.cpp:13:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
tests/test_net_driver_id.cpp:8:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_net_driver_id.cpp:15:0: information: Include file: <ifaddrs.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ifaddrs.h>
^
tests/test_net_driver_id.cpp:16:0: information: Include file: <net/if.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <net/if.h>
^
tests/test_net_driver_id.cpp:21:0: information: Include file: <netpacket/packet.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <netpacket/packet.h>
^
tests/test_net_driver_id.cpp:23:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
tests/test_net_driver_id.cpp:25:0: information: Include file: <string_view> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string_view>
^
tests/test_net_driver_id.cpp:10:0: information: Include file: <iphlpapi.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iphlpapi.h>
^
tests/test_net_driver_id.cpp:11:0: information: Include file: <winsock2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <winsock2.h>
^
tests/test_net_driver_id.cpp:12:0: information: Include file: <ws2tcpip.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ws2tcpip.h>
^
kernel/net_driver.hpp:2:617: error: Unmatched '}'. Configuration: '_WIN32'. [syntaxError]
/**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ^
tests/test_net_driver_id.cpp:19:0: information: Include file: <net/if_dl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <net/if_dl.h>
^
kernel/net_driver.hpp:2:617: error: Unmatched '}'. Configuration: '__APPLE__;__DragonFly__;__FreeBSD__;__NetBSD__;__OpenBSD__'. [syntaxError]
/**

tests/test_net_driver_ipv6.cpp:8:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
tests/test_net_driver_ipv6.cpp:9:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_net_driver_ipv6.cpp:10:0: information: Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <chrono>
^
tests/test_net_driver_ipv6.cpp:11:0: information: Include file: <sys/wait.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sys/wait.h>
^
tests/test_net_driver_ipv6.cpp:12:0: information: Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <thread>
^
tests/test_net_driver_ipv6.cpp:13:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
tests/test_net_driver_loopback.cpp:8:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
tests/test_net_driver_loopback.cpp:9:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_net_driver_loopback.cpp:10:0: information: Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <chrono>
^
tests/test_net_driver_loopback.cpp:11:0: information: Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <thread>
^
tests/test_net_driver_overflow.cpp:8:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_net_driver_overflow.cpp:9:0: information: Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <chrono>
^
tests/test_net_driver_overflow.cpp:10:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
tests/test_net_driver_overflow.cpp:11:0: information: Include file: <sys/wait.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sys/wait.h>
^
tests/test_net_driver_overflow.cpp:12:0: information: Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <thread>
^
tests/test_net_driver_persistent_id.cpp:8:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_net_driver_persistent_id.cpp:9:0: information: Include file: <filesystem> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <filesystem>
^
tests/test_net_driver_persistent_id.cpp:10:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
tests/test_net_driver_reconnect.cpp:8:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
tests/test_net_driver_reconnect.cpp:9:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_net_driver_reconnect.cpp:10:0: information: Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <chrono>
^
tests/test_net_driver_reconnect.cpp:11:0: information: Include file: <sys/wait.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sys/wait.h>
^
tests/test_net_driver_reconnect.cpp:12:0: information: Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <thread>
^
tests/test_net_driver_reconnect.cpp:13:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
tests/test_net_driver_socket_failure.cpp:8:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
tests/test_net_driver_socket_failure.cpp:9:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_net_driver_socket_failure.cpp:10:0: information: Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <chrono>
^
tests/test_net_driver_socket_failure.cpp:11:0: information: Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <thread>
^
tests/test_net_driver_tcp.cpp:8:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
tests/test_net_driver_tcp.cpp:9:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_net_driver_tcp.cpp:10:0: information: Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <chrono>
^
tests/test_net_driver_tcp.cpp:11:0: information: Include file: <sys/wait.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sys/wait.h>
^
tests/test_net_driver_tcp.cpp:12:0: information: Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <thread>
^
tests/test_net_driver_tcp.cpp:13:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
tests/test_net_driver_unpriv_id.cpp:8:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_net_driver_unpriv_id.cpp:9:0: information: Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdlib>
^
tests/test_net_driver_unpriv_id.cpp:10:0: information: Include file: <filesystem> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <filesystem>
^
tests/test_net_driver_unpriv_id.cpp:11:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
tests/test_net_two_node.cpp:21:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_net_two_node.cpp:22:0: information: Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <chrono>
^
tests/test_net_two_node.cpp:23:0: information: Include file: <csignal> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <csignal>
^
tests/test_net_two_node.cpp:24:0: information: Include file: <sys/wait.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sys/wait.h>
^
tests/test_net_two_node.cpp:25:0: information: Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <thread>
^
tests/test_poll_network.cpp:22:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_poll_network.cpp:23:0: information: Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <chrono>
^
tests/test_poll_network.cpp:24:0: information: Include file: <csignal> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <csignal>
^
tests/test_poll_network.cpp:25:0: information: Include file: <sys/wait.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sys/wait.h>
^
tests/test_poll_network.cpp:26:0: information: Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <thread>
^
tests/test_scheduler.cpp:2:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_scheduler_deadlock.cpp:7:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_scheduler_edge.cpp:7:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_semantic_region.cpp:2:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_service_contract.cpp:8:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_service_contract.cpp:26:10: style: Redundant initialization for 'next'. The initialized value is overwritten before it is read. [redundantInitialization]
    next = scheduler.preempt();
         ^
tests/test_service_contract.cpp:25:15: note: next is initialized
    auto next = scheduler.preempt(); // drain leftover
              ^
tests/test_service_contract.cpp:26:10: note: next is overwritten
    next = scheduler.preempt();
         ^
tests/test_service_manager_dag.cpp:8:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_service_manager_updates.cpp:8:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_service_serialization.cpp:7:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_service_serialization.cpp:8:0: information: Include file: <filesystem> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <filesystem>
^
tests/test_service_serialization.cpp:65:12: warning: Return value of function loaded.handle_crash() is not used. [ignoredReturnValue]
    loaded.handle_crash(1);
           ^
tests/test_stream_foundation.cpp:4:0: information: Include file: "minix/io/file_operations.hpp" not found. [missingInclude]
#include "minix/io/file_operations.hpp" // open_stream declarations
^
tests/test_stream_foundation.cpp:5:0: information: Include file: "minix/io/file_stream.hpp" not found. [missingInclude]
#include "minix/io/file_stream.hpp"     // FileStream definition
^
tests/test_stream_foundation.cpp:6:0: information: Include file: "minix/io/standard_streams.hpp" not found. [missingInclude]
#include "minix/io/standard_streams.hpp"
^
tests/test_stream_foundation.cpp:7:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
tests/test_stream_foundation.cpp:8:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_stream_foundation.cpp:9:0: information: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring>
^
tests/test_stream_foundation.cpp:10:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
tests/test_streams.cpp:1:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert> // for assert
^
tests/test_streams.cpp:2:0: information: Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdio>  // for printf
^
tests/test_svcctl.cpp:8:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_svcctl.cpp:9:0: information: Include file: <unordered_map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unordered_map>
^
tests/test_syscall.cpp:1:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert> // for assert
^
tests/test_syscall.cpp:2:0: information: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring> // for strcmp
^
tests/test_syscall.cpp:3:0: information: Include file: <fcntl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <fcntl.h>
^
tests/test_syscall.cpp:4:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
tests/test_wait_graph.cpp:2:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
tests/test_wait_graph.cpp:7:15: warning: Assert statement calls a function which may have desired side effects: 'add_edge'. [assertWithSideEffect]
    assert(!g.add_edge(1, 2));
              ^
tests/test_wait_graph.cpp:9:15: warning: Assert statement calls a function which may have desired side effects: 'add_edge'. [assertWithSideEffect]
    assert(!g.add_edge(2, 3));
              ^
tests/test_wait_graph.cpp:11:14: warning: Assert statement calls a function which may have desired side effects: 'add_edge'. [assertWithSideEffect]
    assert(g.add_edge(3, 1));
             ^
tools/bootblok1.cpp:2:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
tools/bootblok1.cpp:3:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
tools/bootblok1.cpp:4:0: information: Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <fstream>
^
tools/bootblok1.cpp:5:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
tools/bootblok1.cpp:6:0: information: Include file: <stdexcept> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdexcept>
^
tools/bootblok1.cpp:7:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
tools/bootblok1.cpp:8:0: information: Include file: <string_view> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string_view>
^
tools/bootblok1.cpp:9:0: information: Include file: <system_error> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <system_error>
^
tools/bootblok1.cpp:26:5: warning: Member variable 'optional < std :: uint32_t >::value_' is not initialized in the constructor. [uninitMemberVar]
    optional() : has_value_(false) {}
    ^
tools/bootblok1.cpp:26:5: warning: Member variable 'optional < std :: uint64_t >::value_' is not initialized in the constructor. [uninitMemberVar]
    optional() : has_value_(false) {}
    ^
tools/bootblok1.cpp:27:5: style: Class 'optional < std :: uint32_t >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    optional(T val) : has_value_(true), value_(val) {}
    ^
tools/bootblok1.cpp:27:5: style: Class 'optional < std :: uint64_t >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    optional(T val) : has_value_(true), value_(val) {}
    ^
tools/bootblok1.cpp:27:5: style: Class 'optional < __UINT8_TYPE__ >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    optional(T val) : has_value_(true), value_(val) {}
    ^
tools/build.cpp:45:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
tools/build.cpp:46:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
tools/build.cpp:47:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
tools/build.cpp:48:0: information: Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <fstream>
^
tools/build.cpp:49:0: information: Include file: <iomanip> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iomanip>
^
tools/build.cpp:50:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
tools/build.cpp:51:0: information: Include file: <limits> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <limits>
^
tools/build.cpp:52:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
tools/build.cpp:53:0: information: Include file: <stdexcept> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdexcept>
^
tools/build.cpp:54:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
tools/build.cpp:55:0: information: Include file: <string_view> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string_view>
^
tools/build.cpp:56:0: information: Include file: <system_error> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <system_error>
^
tools/build.cpp:57:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
tools/build.cpp:814:9: performance: Variable 'image_' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
        image_ = std::make_unique<ImageFile>(output_path);
        ^
tools/c86/dos2out.cpp:101:0: information: Include file: "/lib/C86/stdio.h" not found. [missingInclude]
#include "/lib/C86/stdio.h"
^
tools/c86/dos2out.cpp:117:1: error: syntax error [syntaxError]
main (argc,argv)
^
tools/diskio.hpp:17:0: information: Include file: <atomic> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <atomic>
^
tools/diskio.hpp:18:0: information: Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <chrono>
^
tools/diskio.hpp:19:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
tools/diskio.hpp:20:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
tools/diskio.hpp:21:0: information: Include file: <stdexcept> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdexcept>
^
tools/diskio.hpp:22:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
tools/diskio.hpp:23:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
tools/diskio.cpp:8:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
tools/diskio.cpp:9:0: information: Include file: <cerrno> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cerrno>
^
tools/diskio.cpp:10:0: information: Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <chrono>
^
tools/diskio.cpp:11:0: information: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring>
^
tools/diskio.cpp:18:0: information: Include file: <fcntl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <fcntl.h>
^
tools/diskio.cpp:19:0: information: Include file: <sys/stat.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sys/stat.h>
^
tools/diskio.cpp:20:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
tools/diskio.cpp:429:44: warning: Return value of function const_cast<DiskInterface*>(this)->read_sector_raw() is not used. [ignoredReturnValue]
        const_cast<DiskInterface *>(this)->read_sector_raw(SectorAddress(0));
                                           ^
tools/diskio.cpp:14:0: information: Include file: <io.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <io.h>
^
tools/diskio.cpp:15:0: information: Include file: <windows.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <windows.h>
^
tools/diskio.cpp:22:0: information: Include file: <linux/fs.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <linux/fs.h>
^
tools/diskio.cpp:23:0: information: Include file: <sys/ioctl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sys/ioctl.h>
^
tools/fsck.cpp:27:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
tools/fsck.cpp:28:0: information: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
tools/fsck.cpp:29:0: information: Include file: <cctype> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cctype>
^
tools/fsck.cpp:30:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
tools/fsck.cpp:31:0: information: Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdlib>
^
tools/fsck.cpp:32:0: information: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring>
^
tools/fsck.cpp:33:0: information: Include file: <exception> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <exception>
^
tools/fsck.cpp:34:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
tools/fsck.cpp:35:0: information: Include file: <limits> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <limits>
^
tools/fsck.cpp:36:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
tools/fsck.cpp:37:0: information: Include file: <optional> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <optional>
^
tools/fsck.cpp:38:0: information: Include file: <stdexcept> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdexcept>
^
tools/fsck.cpp:39:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
tools/fsck.cpp:40:0: information: Include file: <string_view> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string_view>
^
tools/fsck.cpp:41:0: information: Include file: <type_traits> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <type_traits>
^
tools/fsck.cpp:42:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
tools/fsck.cpp:436:12: warning: Member variable 'SuperBlock::sb_' is not initialized. [uninitMemberVarPrivate]
    struct dsb sb_;
           ^
tools/fsck.cpp:990:14: warning: Member variable 'FilesystemChecker::superblock_' is not initialized in the constructor. [uninitMemberVar]
    explicit FilesystemChecker(diskio::DiskInterface &disk, FsckMode mode)
             ^
tools/fsck.cpp:349:10: performance: inconclusive: Technically the member function 'minix::fsck::UserInterface::print_message' can be static (but you may consider moving to unnamed namespace). [functionStatic]
    void print_message(std::string_view message) const { std::cout << message << std::flush; }
         ^
tools/fsck.cpp:351:10: performance: inconclusive: Technically the member function 'minix::fsck::UserInterface::print_error' can be static (but you may consider moving to unnamed namespace). [functionStatic]
    void print_error(std::string_view error, const PathTracker &path) const {
         ^
tools/fsck.cpp:356:10: performance: inconclusive: Technically the member function 'minix::fsck::UserInterface::print_warning' can be static (but you may consider moving to unnamed namespace). [functionStatic]
    void print_warning(std::string_view warning) const {
         ^
tools/fsck.cpp:389:58: style: inconclusive: Technically the member function 'minix::fsck::UserInterface::get_input' can be const. [functionConst]
    template <typename T> [[nodiscard]] std::optional<T> get_input(std::string_view prompt) {
                                                         ^
tools/fsck.cpp:440:10: style: inconclusive: Technically the member function 'minix::fsck::SuperBlock::load_from_disk' can be const. [functionConst]
    void load_from_disk(diskio::DiskInterface &disk) {
         ^
tools/fsck.cpp:530:28: performance: inconclusive: Technically the member function 'minix::fsck::SuperBlock::get_imap_start' can be static (but you may consider moving to unnamed namespace). [functionStatic]
    [[nodiscard]] block_nr get_imap_start() const noexcept { return SUPER_BLOCK + 1; }
                           ^
tools/fsck.cpp:648:10: style: inconclusive: Technically the member function 'minix::fsck::Inode::load_from_disk' can be const. [functionConst]
    void load_from_disk(diskio::DiskInterface &disk, const SuperBlock &sb) {
         ^
tools/fsck.cpp:824:40: performance: inconclusive: Technically the member function 'minix::fsck::Inode::read_indirect_zones' can be static (but you may consider moving to unnamed namespace). [functionStatic]
    [[nodiscard]] std::vector<zone_nr> read_indirect_zones(diskio::DiskInterface &disk,
                                       ^
tools/fsck.cpp:1331:31: performance: inconclusive: Technically the member function 'minix::fsck::FilesystemChecker::inode_type_to_string' can be static (but you may consider moving to unnamed namespace). [functionStatic]
    [[nodiscard]] std::string inode_type_to_string(InodeType type) const {
                              ^
tools/fsck.cpp:1413:10: performance: inconclusive: Technically the member function 'minix::fsck::FsckApplication::print_usage' can be static (but you may consider moving to unnamed namespace). [functionStatic]
    void print_usage(const char *program_name) {
         ^
tools/fsck.cpp:914:48: style: Parameter 'ui' can be declared as reference to const [constParameterReference]
    [[nodiscard]] bool validate(UserInterface &ui, const PathTracker &path,
                                               ^
tools/fsck.cpp:270:19: style: Consider using std::accumulate algorithm instead of a raw loop. [useStlAlgorithm]
            total += count;
                  ^
tools/fsck.cpp:76:34: style: struct member 'FsckConstants::MAX_PRINT_ERRORS' is never used. [unusedStructMember]
    static constexpr std::size_t MAX_PRINT_ERRORS = 8;
                                 ^
tools/fsck.cpp:77:34: style: struct member 'FsckConstants::MAX_WIDTH' is never used. [unusedStructMember]
    static constexpr std::size_t MAX_WIDTH = 32;
                                 ^
tools/fsck.cpp:78:34: style: struct member 'FsckConstants::MAX_DIR_SIZE' is never used. [unusedStructMember]
    static constexpr std::size_t MAX_DIR_SIZE = 5000;
                                 ^
tools/fsck.cpp:79:34: style: struct member 'FsckConstants::CHUNK_INDIRECT' is never used. [unusedStructMember]
    static constexpr std::size_t CHUNK_INDIRECT = 128;
                                 ^
tools/fsck.cpp:80:34: style: struct member 'FsckConstants::CHUNK_DIRECT' is never used. [unusedStructMember]
    static constexpr std::size_t CHUNK_DIRECT = 16;
                                 ^
tools/getcore.cpp:1:1: error: syntax error [syntaxError]
main()
^
tools/mkfs.cpp:36:0: information: Include file: "stat.hpp" not found. [missingInclude]
#include "stat.hpp"
^
tools/mkfs.cpp:37:0: information: Include file: "stdio.hpp" not found. [missingInclude]
#include "stdio.hpp"
^
tools/mkfs.cpp:220:1: error: syntax error [syntaxError]
super(zones, inodes) int zones, inodes;
^
tools/r.cpp:4:0: information: Include file: <fcntl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <fcntl.h>
^
tools/r.cpp:5:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
tools/r.cpp:6:0: information: Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdlib.h>
^
tools/r.cpp:7:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
tools/r.cpp:18:13: style: The scope of the variable 'ct' can be reduced. [variableScope]
    int fd, ct;
            ^
tools/r.cpp:69:12: style: The scope of the variable 'k' can be reduced. [variableScope]
    int i, k;
           ^
tools/r.cpp:70:10: style: The scope of the variable 'c1' can be reduced. [variableScope]
    char c1;
         ^
vmm.cpp:4:0: information: Include file: <stddef.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stddef.h> // For NULL
^
vmm.cpp:5:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h> // For uintptr_t
^
vmm.cpp:37:29: style: C-style pointer casting [cstyleCast]
    kernel_page_directory = (pde_t*)kernel_page_directory_phys;
                            ^
vmm.cpp:120:42: style: C-style pointer casting [cstyleCast]
            pte_t* new_page_table_virt = (pte_t*)new_page_table_phys; // Assuming temp identity map for new PT
                                         ^
vmm.cpp:144:30: style: C-style pointer casting [cstyleCast]
    pte_t* page_table_virt = (pte_t*)pte_get_addr(pde);
                             ^
vmm.cpp:104:49: style: inconclusive: Function 'vmm_get_pte' argument 2 names different: declaration 'create' definition 'create_if_missing'. [funcArgNamesDifferent]
pte_t* vmm_get_pte(uintptr_t virtual_addr, bool create_if_missing) {
                                                ^
vmm.h:71:49: note: Function 'vmm_get_pte' argument 2 names different: declaration 'create' definition 'create_if_missing'.
pte_t* vmm_get_pte(uintptr_t virtual_addr, bool create);
                                                ^
vmm.cpp:104:49: note: Function 'vmm_get_pte' argument 2 names different: declaration 'create' definition 'create_if_missing'.
pte_t* vmm_get_pte(uintptr_t virtual_addr, bool create_if_missing) {
                                                ^
commands/comm.cpp:23:1: error: The one definition rule is violated, different classes/structs have the same name 'file' [ctuOneDefinitionRuleViolation]
struct file {
^
commands/ls.cpp:22:1: note: The one definition rule is violated, different classes/structs have the same name 'file'
struct file {
^
commands/comm.cpp:23:1: note: The one definition rule is violated, different classes/structs have the same name 'file'
struct file {
^
kernel/wini.cpp:85:9: error: The one definition rule is violated, different classes/structs have the same name 'wini' [ctuOneDefinitionRuleViolation]
PRIVATE struct wini {             /* main drive struct, one entry per drive */
        ^
kernel/xt_wini.cpp:82:9: note: The one definition rule is violated, different classes/structs have the same name 'wini'
PRIVATE struct wini {             /* main drive struct, one entry per drive */
        ^
kernel/wini.cpp:85:9: note: The one definition rule is violated, different classes/structs have the same name 'wini'
PRIVATE struct wini {             /* main drive struct, one entry per drive */
        ^
commands/dd.cpp:339:0: style: The function 'extra' is never used. [unusedFunction]
static void extra(void) {
^
common/math/octonion.cpp:148:0: style: The function 'normalized' is never used. [unusedFunction]
Octonion Octonion::normalized() const {
^
common/math/octonion.cpp:154:0: style: The function 'is_unit' is never used. [unusedFunction]
bool Octonion::is_unit(double tolerance) const {
^
common/math/octonion.cpp:130:0: style: The function 'inverse' is never used. [unusedFunction]
Octonion Octonion::inverse() const {
^
common/math/quaternion.hpp:93:0: style: The function 'identity' is never used. [unusedFunction]
    static constexpr Quaternion identity() { return Quaternion(1.0, 0.0, 0.0, 0.0); }
^
common/math/sedenion.cpp:176:0: style: The function 'is_zero_divisor_candidate' is never used. [unusedFunction]
bool Sedenion::is_zero_divisor_candidate() const {
^
console.cpp:30:0: style: The function 'inb' is never used. [unusedFunction]
static inline unsigned char inb(unsigned short port) {
^
console.cpp:44:0: style: The function 'console_set_cursor' is never used. [unusedFunction]
void console_set_cursor(int x, int y) {
^
console.cpp:62:0: style: The function 'console_get_cursor' is never used. [unusedFunction]
void console_get_cursor(int* x, int* y) {
^
console.cpp:202:0: style: The function 'console_set_vga_buffer_address' is never used. [unusedFunction]
void console_set_vga_buffer_address(volatile unsigned short* new_address) {
^
crypto/kyber.cpp:124:0: style: The function 'sodium_aead_encrypt' is never used. [unusedFunction]
std::vector<std::byte> sodium_aead_encrypt(
^
crypto/kyber.cpp:147:0: style: The function 'sodium_aead_decrypt' is never used. [unusedFunction]
std::vector<std::byte> sodium_aead_decrypt(
^
crypto/kyber_impl/fips202.c:523:0: style: The function 'pqcrystals_kyber_fips202_ref_shake128_init' is never used. [unusedFunction]
void shake128_init(keccak_state *state)
^
crypto/kyber_impl/fips202.c:538:0: style: The function 'pqcrystals_kyber_fips202_ref_shake128_absorb' is never used. [unusedFunction]
void shake128_absorb(keccak_state *state, const uint8_t *in, size_t inlen)
^
crypto/kyber_impl/fips202.c:550:0: style: The function 'pqcrystals_kyber_fips202_ref_shake128_finalize' is never used. [unusedFunction]
void shake128_finalize(keccak_state *state)
^
crypto/kyber_impl/fips202.c:700:0: style: The function 'pqcrystals_kyber_fips202_ref_shake128' is never used. [unusedFunction]
void shake128(uint8_t *out, size_t outlen, const uint8_t *in, size_t inlen)
^
crypto/kyber_impl/kem.c:50:0: style: The function 'pqcrystals_kyber768_ref_keypair' is never used. [unusedFunction]
int crypto_kem_keypair(uint8_t *pk,
^
crypto/kyber_impl/kem.c:113:0: style: The function 'pqcrystals_kyber768_ref_enc' is never used. [unusedFunction]
int crypto_kem_enc(uint8_t *ct,
^
crypto/kyber_impl/kem.c:140:0: style: The function 'pqcrystals_kyber768_ref_dec' is never used. [unusedFunction]
int crypto_kem_dec(uint8_t *ss,
^
fs/compat.cpp:54:0: style: The function 'alloc_extent_table' is never used. [unusedFunction]
PUBLIC int alloc_extent_table(struct inode *ip, unsigned short count) {
^
h/com.hpp:90:0: style: The function 'seconds_left' is never used. [unusedFunction]
inline int64_t &seconds_left(message &m) noexcept { return m.m6_l1(); }
^
h/com.hpp:214:0: style: The function 'user_time' is never used. [unusedFunction]
inline int64_t &user_time(message &m) noexcept { return m.m4_l1(); }
^
h/com.hpp:220:0: style: The function 'system_time' is never used. [unusedFunction]
inline int64_t &system_time(message &m) noexcept { return m.m4_l2(); }
^
h/com.hpp:226:0: style: The function 'child_utime' is never used. [unusedFunction]
inline int64_t &child_utime(message &m) noexcept { return m.m4_l3(); }
^
h/com.hpp:232:0: style: The function 'child_stime' is never used. [unusedFunction]
inline int64_t &child_stime(message &m) noexcept { return m.m4_l4(); }
^
h/com.hpp:239:0: style: The function 'proc1' is never used. [unusedFunction]
inline int &proc1(message &m) noexcept { return m.m1_i1(); }
^
h/com.hpp:245:0: style: The function 'proc2' is never used. [unusedFunction]
inline int &proc2(message &m) noexcept { return m.m1_i2(); }
^
h/com.hpp:251:0: style: The function 'pid' is never used. [unusedFunction]
inline int &pid(message &m) noexcept { return m.m1_i3(); }
^
h/com.hpp:257:0: style: The function 'stack_ptr' is never used. [unusedFunction]
inline char *&stack_ptr(message &m) noexcept { return m.m1_p1(); }
^
h/com.hpp:263:0: style: The function 'set_token' is never used. [unusedFunction]
inline void set_token(message &m, std::uint64_t val) noexcept {
^
h/com.hpp:271:0: style: The function 'token' is never used. [unusedFunction]
inline std::uint64_t token(const message &m) noexcept {
^
h/com.hpp:285:0: style: The function 'signum' is never used. [unusedFunction]
inline int &signum(message &m) noexcept { return m.m6_i2(); }
^
h/com.hpp:297:0: style: The function 'mem_ptr' is never used. [unusedFunction]
inline char *&mem_ptr(message &m) noexcept { return m.m1_p1(); }
^
h/com.hpp:305:0: style: The function 'sig_map' is never used. [unusedFunction]
inline int &sig_map(message &m) noexcept { return m.m1_i2(); }
^
h/type.hpp:185:0: style: The function 'm6_i3' is never used. [unusedFunction]
    constexpr int &m6_i3() { return m_u.m_m6.m6i3; }
^
include/ctype.hpp:21:0: style: The function 'isalpha' is never used. [unusedFunction]
inline bool isalpha(int c) noexcept { return (ctype_ + 1)[c] & (U | L); }
^
include/ctype.hpp:22:0: style: The function 'isupper' is never used. [unusedFunction]
inline bool isupper(int c) noexcept { return (ctype_ + 1)[c] & U; }
^
include/ctype.hpp:23:0: style: The function 'islower' is never used. [unusedFunction]
inline bool islower(int c) noexcept { return (ctype_ + 1)[c] & L; }
^
include/ctype.hpp:25:0: style: The function 'isxdigit' is never used. [unusedFunction]
inline bool isxdigit(int c) noexcept { return (ctype_ + 1)[c] & (N | X); }
^
include/ctype.hpp:27:0: style: The function 'ispunct' is never used. [unusedFunction]
inline bool ispunct(int c) noexcept { return (ctype_ + 1)[c] & P; }
^
include/ctype.hpp:28:0: style: The function 'isalnum' is never used. [unusedFunction]
inline bool isalnum(int c) noexcept { return (ctype_ + 1)[c] & (U | L | N); }
^
include/ctype.hpp:29:0: style: The function 'isprint' is never used. [unusedFunction]
inline bool isprint(int c) noexcept { return (ctype_ + 1)[c] & (P | U | L | N); }
^
include/ctype.hpp:30:0: style: The function 'iscntrl' is never used. [unusedFunction]
inline bool iscntrl(int c) noexcept { return (ctype_ + 1)[c] & C; }
^
include/ctype.hpp:31:0: style: The function 'isascii' is never used. [unusedFunction]
inline bool isascii(int c) noexcept { return static_cast<unsigned>(c) <= 0177; }
^
kernel/dmp.cpp:28:0: style: The function 'p_dmp' is never used. [unusedFunction]
void p_dmp() noexcept { // K&R -> modern C++, added noexcept
^
kernel/dmp.cpp:98:0: style: The function 'map_dmp' is never used. [unusedFunction]
void map_dmp() noexcept { // K&R -> modern C++, added noexcept
^
kernel/dmp.cpp:142:0: style: The function 'set_name' is never used. [unusedFunction]
static void set_name(int proc_nr, char *ptr) noexcept { // Added noexcept
^
kernel/floppy.cpp:201:0: style: The function 'f_do_rdwt' is never used. [unusedFunction]
static int f_do_rdwt(message *m_ptr) noexcept { // PRIVATE -> static, renamed, noexcept
^
kernel/idt64.cpp:80:0: style: The function 'idt_init' is never used. [unusedFunction]
void idt_init() noexcept {
^
kernel/klib88.cpp:44:0: style: The function 'cp_mess' is never used. [unusedFunction]
PUBLIC void cp_mess(int src_proc_nr, uint64_t src_phys_addr, message *src_msg_ptr, uint64_t dst_phys_addr,
^
kernel/klib88.cpp:78:0: style: The function 'portw_out' is never used. [unusedFunction]
PUBLIC void portw_out(unsigned port, unsigned value) noexcept {
^
kernel/klib88.cpp:82:0: style: The function 'portw_in' is never used. [unusedFunction]
PUBLIC void portw_in(unsigned port, unsigned *value) noexcept {
^
kernel/klib88.cpp:101:0: style: The function 'restore' is never used. [unusedFunction]
PUBLIC void restore() noexcept { // Changed (void) to ()
^
kernel/klib88.cpp:109:0: style: The function 'build_sig' is never used. [unusedFunction]
PUBLIC void build_sig(u16_t *dst, struct proc *rp, int sig) noexcept {
^
kernel/klib88.cpp:122:0: style: The function 'csv' is never used. [unusedFunction]
PUBLIC void csv(unsigned bytes) noexcept {
^
kernel/klib88.cpp:128:0: style: The function 'cret' is never used. [unusedFunction]
PUBLIC void cret() noexcept { /* Nothing to do when returning from a C routine in this version. */ } // Changed (void) to ()
^
kernel/klib88.cpp:133:0: style: The function 'get_chrome' is never used. [unusedFunction]
PUBLIC int get_chrome() noexcept { // Changed (void) to ()
^
kernel/klib88.cpp:143:0: style: The function 'vid_copy' is never used. [unusedFunction]
PUBLIC void vid_copy(u16_t *buf, unsigned base, unsigned off, unsigned words) noexcept {
^
kernel/klib88.cpp:170:0: style: The function 'reboot' is never used. [unusedFunction]
PUBLIC void reboot() noexcept { // Changed (void) to ()
^
kernel/klib88.cpp:175:0: style: The function 'wreboot' is never used. [unusedFunction]
PUBLIC void wreboot() noexcept { asm volatile("cli; int $0x16; int $0x19" ::: "memory"); } // Changed (void) to ()
^
kernel/memory.cpp:76:0: style: The function 'mem_task' is never used. [unusedFunction]
PUBLIC void mem_task() noexcept {
^
kernel/mpx64.cpp:173:0: style: The function 's_call' is never used. [unusedFunction]
void s_call(void) {
^
kernel/mpx64.cpp:188:0: style: The function 'lpr_int' is never used. [unusedFunction]
void lpr_int(void) {
^
kernel/mpx64.cpp:199:0: style: The function 'disk_int' is never used. [unusedFunction]
void disk_int(void) {
^
kernel/mpx64.cpp:212:0: style: The function 'divide' is never used. [unusedFunction]
void divide(void) {
^
kernel/mpx64.cpp:223:0: style: The function 'trp' is never used. [unusedFunction]
void trp(void) {
^
kernel/mpx88.cpp:59:0: style: The function 'tty_int' is never used. [unusedFunction]
PUBLIC void tty_int() noexcept { // (void) -> (), added noexcept
^
kernel/mpx88.cpp:91:0: style: The function 'wini_int' is never used. [unusedFunction]
PUBLIC void wini_int() noexcept { // (void) -> (), added noexcept
^
kernel/mpx88.cpp:103:0: style: The function 'clock_int' is never used. [unusedFunction]
PUBLIC void clock_int() noexcept { // (void) -> (), added noexcept
^
kernel/mpx88.cpp:115:0: style: The function 'surprise' is never used. [unusedFunction]
PUBLIC void surprise() noexcept { // (void) -> (), added noexcept
^
kernel/mpx88.cpp:145:0: style: The function 'idle' is never used. [unusedFunction]
PUBLIC void idle() noexcept { // (void) -> (), added noexcept
^
kernel/octonion.hpp:26:0: style: The function 'from_bytes' is never used. [unusedFunction]
    static constexpr Octonion from_bytes(const std::array<std::uint8_t, 32> &bytes) noexcept {
^
kernel/octonion.hpp:40:0: style: The function 'to_bytes' is never used. [unusedFunction]
    constexpr void to_bytes(std::array<std::uint8_t, 32> &out) const noexcept {
^
kernel/paging.cpp:23:0: style: The function 'paging_init' is never used. [unusedFunction]
PUBLIC void paging_init() noexcept { // (void) -> (), noexcept
^
kernel/paging.cpp:42:0: style: The function 'alloc_virtual' is never used. [unusedFunction]
PUBLIC void *alloc_virtual(uint64_t bytes, int flags) noexcept {
^
kernel/paging.cpp:65:0: style: The function 'map_page' is never used. [unusedFunction]
PUBLIC int map_page(uint64_t va, uint64_t pa, int flags) noexcept {
^
kernel/pqcrypto.cpp:24:0: style: The function 'generate_keypair' is never used. [unusedFunction]
KeyPair generate_keypair() noexcept {
^
kernel/quaternion_spinlock.hpp:29:0: style: The function 'id' is never used. [unusedFunction]
    [[nodiscard]] static constexpr Quaternion id() noexcept { return {}; }
^
kernel/schedule.cpp:101:0: style: The function 'is_blocked' is never used. [unusedFunction]
bool Scheduler::is_blocked(xinim::pid_t pid) const noexcept { return blocked_.contains(pid); }
^
kernel/schedule.cpp:106:0: style: The function 'pick' is never used. [unusedFunction]
xinim::pid_t Scheduler::pick() const noexcept { return ready_.empty() ? -1 : ready_.front(); }
^
kernel/schedule.cpp:115:0: style: The function 'direct_handoff' is never used. [unusedFunction]
void Scheduler::direct_handoff(xinim::pid_t receiver) {
^
kernel/schedule.hpp:102:0: style: The function 'graph' is never used. [unusedFunction]
    [[nodiscard]] const lattice::WaitForGraph &graph() const noexcept { return graph_; }
^
kernel/sedenion.hpp:173:0: style: The function 'is_zero_divisor' is never used. [unusedFunction]
[[nodiscard]] inline bool is_zero_divisor(const Sedenion &s) noexcept {
^
kernel/sedenion.hpp:180:0: style: The function 'encrypt_sedenion' is never used. [unusedFunction]
inline void encrypt_sedenion(std::span<const std::uint8_t> in, std::span<std::uint8_t> out,
^
kernel/service.cpp:101:0: style: The function 'set_restart_limit' is never used. [unusedFunction]
void ServiceManager::set_restart_limit(xinim::pid_t pid, std::uint32_t limit) {
^
kernel/wini.cpp:575:0: style: The function 'init_params' is never used. [unusedFunction]
static void init_params() noexcept { // Added noexcept
^
kernel/wormhole.hpp:95:0: style: The function 'get_mr' is never used. [unusedFunction]
    std::optional<uint64_t> get_mr(size_t index) const {
^
lib/abs.cpp:14:0: style: The function 'abs' is never used. [unusedFunction]
[[nodiscard]] constexpr int abs(int i) noexcept { return (i < 0) ? -i : i; }
^
lib/alarm.cpp:5:0: style: The function 'alarm' is never used. [unusedFunction]
int alarm(unsigned int sec) {
^
lib/atol.cpp:15:0: style: The function 'atol' is never used. [unusedFunction]
[[nodiscard]] constexpr long atol(char *s) noexcept { return parse_signed_decimal(s); }
^
lib/bcopy.cpp:2:0: style: The function 'bcopy' is never used. [unusedFunction]
void bcopy(char *src, char *dest, int n) {
^
lib/brk2.cpp:7:0: style: The function 'brk2' is never used. [unusedFunction]
void brk2() {
^
lib/chroot.cpp:5:0: style: The function 'chroot' is never used. [unusedFunction]
int chroot(const char *name) { return callm3(FS, CHROOT, 0, const_cast<char *>(name)); }
^
lib/crt0.cpp:14:0: style: The function '_start' is never used. [unusedFunction]
void _start(void) {
^
lib/dup2.cpp:5:0: style: The function 'dup2' is never used. [unusedFunction]
int dup2(int fd, int fd2) { return callm1(FS, DUP, fd + 0100, fd2, 0, NIL_PTR, NIL_PTR, NIL_PTR); }
^
lib/exec.cpp:14:0: style: The function 'execle' is never used. [unusedFunction]
int execle(const char *name, char *argv) {
^
lib/fread.cpp:14:0: style: The function 'fread' is never used. [unusedFunction]
size_t fread(void *ptr, size_t size, size_t count, FILE *file) {
^
lib/fseek.cpp:7:0: style: The function 'fseek' is never used. [unusedFunction]
int fseek(FILE *iop, long offset, int where) {
^
lib/ftell.cpp:7:0: style: The function 'ftell' is never used. [unusedFunction]
long ftell(FILE *iop) {
^
lib/fwrite.cpp:14:0: style: The function 'fwrite' is never used. [unusedFunction]
size_t fwrite(const void *ptr, size_t size, size_t count, FILE *file) {
^
lib/getenv.cpp:8:0: style: The function 'getenv' is never used. [unusedFunction]
char *getenv(const char *name) {
^
lib/getgrent.cpp:97:0: style: The function 'getgrnam' is never used. [unusedFunction]
struct group *getgrnam(char *name) {
^
lib/getgrent.cpp:111:0: style: The function 'getgrgid' is never used. [unusedFunction]
struct group *getgrgid(int gid) {
^
lib/head.cpp:23:0: style: The function 'start' is never used. [unusedFunction]
void start(void) {
^
lib/io/src/file_operations.cpp:57:0: style: The function 'create_stream' is never used. [unusedFunction]
Result<StreamPtr> create_stream(std::string_view path, Permissions perms) {
^
lib/kill.cpp:4:0: style: The function 'kill' is never used. [unusedFunction]
int kill(int proc, int sig) { return callm1(MM, KILL, proc, sig, 0, NIL_PTR, NIL_PTR, NIL_PTR); }
^
lib/minix/setjmp.cpp:10:0: style: The function '_setjmp' is never used. [unusedFunction]
int _setjmp(jmp_buf env) { return std::setjmp(env); }
^
lib/minix/setjmp.cpp:13:0: style: The function '_longjmp' is never used. [unusedFunction]
void _longjmp(jmp_buf env, int val) {
^
lib/mktemp.cpp:3:0: style: The function 'mktemp' is never used. [unusedFunction]
char *mktemp(template)
^
lib/pause.cpp:4:0: style: The function 'pause' is never used. [unusedFunction]
int pause() { return callm1(MM, PAUSE, 0, 0, 0, NIL_PTR, NIL_PTR, NIL_PTR); }
^
lib/scanf.cpp:10:0: style: The function 'scanf' is never used. [unusedFunction]
int scanf(const char *format, ...) {
^
lib/scanf.cpp:19:0: style: The function 'fscanf' is never used. [unusedFunction]
int fscanf(FILE *fp, const char *format, ...) {
^
lib/scanf.cpp:28:0: style: The function 'sscanf' is never used. [unusedFunction]
int sscanf(const char *str, const char *format, ...) {
^
lib/sprintf.cpp:3:0: style: The function 'sprintf' is never used. [unusedFunction]
char *sprintf(buf,format,args)
^
lib/strncat.cpp:1:0: style: The function 'strncat' is never used. [unusedFunction]
char *strncat(s1, s2, n)
^
mm/main.cpp:247:0: style: The function 'set_map' is never used. [unusedFunction]
static void set_map(int proc_nr, uint64_t base, uint64_t clicks) noexcept {
^
mm/vm.cpp:89:0: style: The function 'vm_handle_fault' is never used. [unusedFunction]
void vm_handle_fault(int proc, virt_addr64 addr) noexcept {
^
mm/vm.cpp:113:0: style: The function 'vm_fork' is never used. [unusedFunction]
int vm_fork(int parent, int child) noexcept {
^
mm/vm.cpp:131:0: style: The function 'vm_mmap' is never used. [unusedFunction]
void *vm_mmap(int proc, void *addr, u64_t length, VmFlags flags) noexcept {
^
tools/bootblok1.cpp:14:0: style: The function 'create_directories' is never used. [unusedFunction]
inline bool create_directories(const std::string &path) {
^
tools/bootblok1.cpp:198:0: style: The function 'hexdump' is never used. [unusedFunction]
    [[nodiscard]] std::string hexdump() const {
^
tools/build.cpp:483:0: style: The function 'current_position' is never used. [unusedFunction]
    [[nodiscard]] std::size_t current_position() const noexcept {
^
tools/diskio.cpp:316:0: style: The function 'read_sectors' is never used. [unusedFunction]
std::vector<SectorBuffer> DiskInterface::read_sectors(SectorAddress start_sector,
^
tools/diskio.cpp:332:0: style: The function 'write_sectors' is never used. [unusedFunction]
void DiskInterface::write_sectors(SectorAddress start_sector,
^
tools/diskio.cpp:367:0: style: The function 'flush_cache' is never used. [unusedFunction]
void DiskInterface::flush_cache() {
^
tools/diskio.cpp:422:0: style: The function 'is_accessible' is never used. [unusedFunction]
bool DiskInterface::is_accessible() const noexcept {
^
tools/diskio.hpp:45:0: style: The function 'get_read_throughput_mbps' is never used. [unusedFunction]
    [[nodiscard]] double get_read_throughput_mbps() const noexcept {
^
tools/diskio.hpp:52:0: style: The function 'get_write_throughput_mbps' is never used. [unusedFunction]
    [[nodiscard]] double get_write_throughput_mbps() const noexcept {
^
tools/diskio.hpp:191:0: style: The function 'at' is never used. [unusedFunction]
    [[nodiscard]] std::uint8_t &at(std::size_t offset) {
^
tools/diskio.hpp:331:0: style: The function 'get_sector_count' is never used. [unusedFunction]
    [[nodiscard]] std::uint64_t get_sector_count() const {
^
tools/diskio.hpp:336:0: style: The function 'is_read_only' is never used. [unusedFunction]
    [[nodiscard]] bool is_read_only() const noexcept { return read_only_; }
^
tools/diskio.hpp:337:0: style: The function 'get_device_path' is never used. [unusedFunction]
    [[nodiscard]] const std::string &get_device_path() const noexcept { return device_path_; }
^
tools/diskio.hpp:338:0: style: The function 'get_statistics' is never used. [unusedFunction]
    [[nodiscard]] const IoStatistics &get_statistics() const noexcept { return statistics_; }
^
tools/diskio.hpp:343:0: style: The function 'reset_statistics' is never used. [unusedFunction]
    void reset_statistics() noexcept { statistics_.reset(); }
^
tools/diskio.hpp:424:0: style: The function 'get_sector' is never used. [unusedFunction]
    [[nodiscard]] SectorAddress get_sector() const noexcept { return sector_; }
^
tools/diskio.hpp:425:0: style: The function 'get_operation' is never used. [unusedFunction]
    [[nodiscard]] const std::string &get_operation() const noexcept { return operation_; }
^
tools/fsck.cpp:178:0: style: The function 'initialize_free_bits' is never used. [unusedFunction]
    void initialize_free_bits(BitNumber start_bit) {
^
tools/fsck.cpp:184:0: style: The function 'size_bits' is never used. [unusedFunction]
    [[nodiscard]] std::size_t size_bits() const noexcept { return bit_count_; }
^
tools/fsck.cpp:185:0: style: The function 'size_words' is never used. [unusedFunction]
    [[nodiscard]] std::size_t size_words() const noexcept { return data_.size(); }
^
tools/fsck.cpp:262:0: style: The function 'total_inodes' is never used. [unusedFunction]
    [[nodiscard]] std::uint32_t total_inodes() const noexcept {
^
tools/fsck.cpp:267:0: style: The function 'total_zones' is never used. [unusedFunction]
    [[nodiscard]] std::uint32_t total_zones() const noexcept {
^
tools/fsck.cpp:329:0: style: The function 'get_parent_inode' is never used. [unusedFunction]
    [[nodiscard]] inode_nr get_parent_inode() const noexcept {
^
tools/fsck.cpp:345:0: style: The function 'set_mode' is never used. [unusedFunction]
    void set_mode(FsckMode mode) noexcept { mode_ = mode; }
^
tools/fsck.cpp:389:0: style: The function 'get_input' is never used. [unusedFunction]
    template <typename T> [[nodiscard]] std::optional<T> get_input(std::string_view prompt) {
^
tools/fsck.cpp:525:0: style: The function 'get_log_zone_size' is never used. [unusedFunction]
    [[nodiscard]] std::uint16_t get_log_zone_size() const noexcept { return sb_.s_log_zone_size; }
^
tools/fsck.cpp:526:0: style: The function 'get_max_file_size' is never used. [unusedFunction]
    [[nodiscard]] file_pos get_max_file_size() const noexcept { return sb_.s_maxsize; }
^
tools/fsck.cpp:528:0: style: The function 'get_scale' is never used. [unusedFunction]
    [[nodiscard]] std::uint32_t get_scale() const noexcept { return 1U << sb_.s_log_zone_size; }
^
tools/fsck.cpp:559:0: style: The function 'set_inode_count' is never used. [unusedFunction]
    void set_inode_count(inode_nr count) {
^
tools/fsck.cpp:563:0: style: The function 'set_zone_count' is never used. [unusedFunction]
    void set_zone_count(zone_nr count) {
^
tools/fsck.cpp:567:0: style: The function 'set_imap_blocks' is never used. [unusedFunction]
    void set_imap_blocks(std::uint16_t blocks) {
^
tools/fsck.cpp:571:0: style: The function 'set_zmap_blocks' is never used. [unusedFunction]
    void set_zmap_blocks(std::uint16_t blocks) {
^
tools/fsck.cpp:575:0: style: The function 'set_first_data_zone' is never used. [unusedFunction]
    void set_first_data_zone(zone_nr zone) {
^
tools/fsck.cpp:579:0: style: The function 'set_log_zone_size' is never used. [unusedFunction]
    void set_log_zone_size(std::uint16_t size) {
^
tools/fsck.cpp:583:0: style: The function 'set_max_file_size' is never used. [unusedFunction]
    void set_max_file_size(file_pos size) {
^
tools/fsck.cpp:707:0: style: The function 'is_regular_file' is never used. [unusedFunction]
    [[nodiscard]] bool is_regular_file() const noexcept {
^
tools/fsck.cpp:712:0: style: The function 'get_number' is never used. [unusedFunction]
    [[nodiscard]] inode_nr get_number() const noexcept { return number_; }
^
tools/fsck.cpp:714:0: style: The function 'get_uid' is never used. [unusedFunction]
    [[nodiscard]] std::uint16_t get_uid() const noexcept { return inode_.i_uid; }
^
tools/fsck.cpp:716:0: style: The function 'get_mtime' is never used. [unusedFunction]
    [[nodiscard]] std::uint32_t get_mtime() const noexcept { return inode_.i_modtime; }
^
tools/fsck.cpp:717:0: style: The function 'get_gid' is never used. [unusedFunction]
    [[nodiscard]] std::uint8_t get_gid() const noexcept { return inode_.i_gid; }
^
tools/fsck.cpp:719:0: style: The function 'get_zone' is never used. [unusedFunction]
    [[nodiscard]] zone_nr get_zone(std::size_t index) const {
^
tools/fsck.cpp:731:0: style: The function 'set_uid' is never used. [unusedFunction]
    void set_uid(std::uint16_t uid) {
^
tools/fsck.cpp:735:0: style: The function 'set_size' is never used. [unusedFunction]
    void set_size(std::uint32_t size) {
^
tools/fsck.cpp:739:0: style: The function 'set_mtime' is never used. [unusedFunction]
    void set_mtime(std::uint32_t mtime) {
^
tools/fsck.cpp:743:0: style: The function 'set_gid' is never used. [unusedFunction]
    void set_gid(std::uint8_t gid) {
^
tools/fsck.cpp:751:0: style: The function 'set_zone' is never used. [unusedFunction]
    void set_zone(std::size_t index, zone_nr zone) {
^
vmm.cpp:168:0: style: The function 'vmm_unmap_page' is never used. [unusedFunction]
void vmm_unmap_page(uintptr_t virtual_addr) {
^
vmm.h:47:0: style: The function 'pte_set_addr' is never used. [unusedFunction]
static inline void pte_set_addr(pte_t* entry, uintptr_t addr) {
^
vmm.h:52:0: style: The function 'pte_set_flags' is never used. [unusedFunction]
static inline void pte_set_flags(pte_t* entry, uint32_t flags) {
^
nofile:0:0: information: Active checkers: There was critical errors (use --checkers-report=<filename> to see details) [checkersReport]

