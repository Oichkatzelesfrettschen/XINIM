name: CMake Build

on:
  push:
    branches: ["master"]
  pull_request:

jobs:
  analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install analysis dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential nasm clang clang-tidy cppcheck cscope python3-pip
          pip install lizard
      - name: Configure
        run: cmake -B build -DBUILD_SYSTEM=OFF -DENABLE_CLANG_TIDY=ON -DENABLE_CPPCHECK=ON
      - name: Build
        run: cmake --build build -- -j$(nproc)
      - name: Run unit tests
        run: ctest --test-dir build --output-on-failure

  asan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install sanitizer dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential nasm clang
      - name: Configure
        run: cmake -B build -DBUILD_SYSTEM=OFF -DENABLE_ASAN=ON
      - name: Build
        run: cmake --build build -- -j$(nproc)
      - name: Run unit tests
        run: ctest --test-dir build --output-on-failure

  tsan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install sanitizer dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential nasm clang
      - name: Configure
        run: cmake -B build -DBUILD_SYSTEM=OFF -DENABLE_TSAN=ON
      - name: Build
        run: cmake --build build -- -j$(nproc)
      - name: Run unit tests
        run: ctest --test-dir build --output-on-failure

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install clang-format
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-format
      - name: Check formatting
        run: |
          FILES=$(git ls-files '*.cpp' '*.h')
          if [ -n "$FILES" ]; then
            clang-format --dry-run --Werror $FILES
          fi
